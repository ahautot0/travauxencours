(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    196808,       4480]
NotebookOptionsPosition[    191811,       4305]
NotebookOutlinePosition[    192156,       4320]
CellTagsIndexPosition[    192113,       4317]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Chaos Land.", "Title",
 CellChangeTimes->{{3.570535567078125*^9, 3.57053558025*^9}}],

Cell[TextData[{
 "Linear homogeneous differential system with constant coefficients (",
 StyleBox["r\[CloseCurlyQuote]=A.r",
  FontFamily->"Arial",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "), an example :"
}], "Subtitle",
 CellChangeTimes->{{3.570535745796875*^9, 3.5705357714375*^9}, 
   3.57053582*^9, {3.570536552734375*^9, 3.5705365591875*^9}, {
   3.57069161059375*^9, 3.570691624703125*^9}, {3.657954976333439*^9, 
   3.6579549788762436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Example", " ", "1"}], " ", ":", " ", 
    RowBox[{"two", " ", "dimensions"}]}], " ", "*)"}], "  ", 
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.570537121125*^9, 3.57053712275*^9}, {3.570537205125*^9, 
   3.570537238421875*^9}, {3.6579033662805886`*^9, 3.6579033743614025`*^9}, 
   3.6579037924265375`*^9, {3.6579038238605924`*^9, 3.6579039417967997`*^9}, {
   3.6579041635498934`*^9, 3.657904209850775*^9}, {3.657904249552845*^9, 
   3.657904255558855*^9}, {3.657955001886284*^9, 3.657955020902717*^9}, {
   3.657955791498271*^9, 3.6579558231819267`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6579042101627755`*^9, 3.657904257181258*^9, {3.657955010528699*^9, 
   3.657955021869919*^9}, 3.657955827986735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6579550249587245`*^9, 3.6579550257231255`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "2"}]},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.657955026378327*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "t", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.65795526718035*^9, 3.6579552975068035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"r", "[", "t", "]"}], ",", "t"}], "]"}], "-", 
    RowBox[{"A", ".", 
     RowBox[{"r", "[", "t", "]"}]}]}], "\[Equal]", "0"}], "]"}]], "Input",
 CellChangeTimes->{
  3.657955377768944*^9, {3.657955502927964*^9, 3.657955516094387*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["x", "1"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["x", "2"], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6579555071399713`*^9, 3.6579555168899884`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"r", "[", "t", "]"}], ",", "t"}], "]"}], "-", 
      RowBox[{"A", ".", 
       RowBox[{"r", "[", "t", "]"}]}]}], "\[Equal]", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.657955466018299*^9, 3.6579554776091194`*^9}, 
   3.657955532178015*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "t"], " ", 
         RowBox[{"C", "[", "1", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "t"], " ", "t", " ", 
         RowBox[{"C", "[", "2", "]"}]}]}]}], "]"}]}], ",", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "t"], " ", 
        RowBox[{"C", "[", "2", "]"}]}]}], "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6579554667983007`*^9, 3.6579554787323217`*^9}, 
   3.6579555333948174`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{"A", " ", "t"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "0", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "0", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.570541121453125*^9, 3.570541158859375*^9}, 
   3.570541216171875*^9, {3.6579030409798174`*^9, 3.6579030739114747`*^9}, {
   3.6579033970282426`*^9, 3.6579033973714433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "t", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.570541501578125*^9, 3.5705415294375*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "t"], " ", 
         RowBox[{
          SubscriptBox["x", "1"], "[", "0", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "t"], " ", "t", " ", 
         RowBox[{
          SubscriptBox["x", "2"], "[", "0", "]"}]}]}]},
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "t"], " ", 
        RowBox[{
         SubscriptBox["x", "2"], "[", "0", "]"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.570541503578125*^9, 3.57054152971875*^9}, 
   3.657902783672965*^9, 3.657902830956648*^9, 3.6579028617043023`*^9, 
   3.6579030757678785`*^9, {3.657903386279824*^9, 3.6579033996958475`*^9}, 
   3.657904277742094*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"r", "[", "t", "]"}], ",", "t"}], "]"}], "-", 
     RowBox[{"A", ".", 
      RowBox[{"r", "[", "t", "]"}]}]}], "//", "Simplify"}], ",", 
   RowBox[{"r", "[", "0", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.570537453171875*^9, 3.570537485921875*^9}, {
  3.5705375264375*^9, 3.570537527046875*^9}, {3.570541232796875*^9, 
  3.570541256703125*^9}, {3.57054815515625*^9, 3.570548161890625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "0", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "0", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5705374594375*^9, 3.57053748634375*^9}, 
   3.5705375280625*^9, 3.57054126159375*^9, 3.5705481625*^9, 
   3.6579034093522644`*^9, 3.6579045345195456`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "r", "]"}], ";", 
  RowBox[{
   RowBox[{"r", "[", "t_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"Inv", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", "A"}], " ", "t"}], "]"}], ".", 
     RowBox[{"r", "[", "t", "]"}]}], "//", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.5705482433125*^9, 3.57054839365625*^9}, 
   3.5705484436875*^9, {3.657904552755977*^9, 3.657904558325187*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inv", "[", "t", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], "+", 
      RowBox[{"2", " ", "t", " ", 
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]], " ", 
    RowBox[{
     SubscriptBox["x", "2"], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6579046233305016`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"x2", " ", 
    RowBox[{"Exp", "[", 
     FractionBox["x1", 
      RowBox[{"2", "x2"}]], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657906588117152*^9, 3.657906712652171*^9}, {
  3.6579068717100506`*^9, 3.6579068762028584`*^9}, {3.657955662361244*^9, 
  3.6579556806756763`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJysfXVYVcH2NqJiix0Y2IItIjZLARXF7m5sFAs7ALsQBIMQQUIF6W4OhwY5
dMOhO8ROPi6bNfs3c+797+Pxebbvmb0n17xrzZoaue/kOm1pKSmp7bJSUv95
moxZ1vJvFOAz20cn10enBp49OfpphEoEzDHvtEYYVwjXHh1KmXnWHf50Dk6M
P5YGaWM/a8pefQODHnXrJveuDOZq9I1yag4Az6X+e1aFloHdhm3q8hMC2+K1
bXuaQGv0uRlgtwb04kwcQLM1oAgOG6yLrjD0BKm2P+59D/jvTwHBua0RxjPh
KQRjeohzuB8I/tf8n79Cgun0Bf8jXf5Jpy9g0hcw6QuY9AVM+gIwbn0WEzy6
tdpKCfZu/byc4KWt/6kiGPPP1gubT8TsE/OPGPOPGPOPGPOPGPOPGPOPGPOP
GPOPGOUP8bHW/9QRzJWukcHYXin/Qw4EEuWiw/kn3V4pTHulMO2VwrRXCtNe
KUx7pTDtlULKixjLixjLS2MpKVauWTlj240tF2L2ieVFjOVFjOVFjOVFjOVF
jOVFjOVFjOVFjOWlsZQU22/ZfsTKJdtubLkQs08sL2IsL2IsL2IsL2IsL2Is
L2IsL2IsL42lpFheYnmC7XesXLLtxpYLMfvE8iLG8iLG8iLG8iLG8iLG8iLG
8tJYSoruRx4SPMjyCtvvWLlk240tF2L2ieVFjOVFjOVFjOVFjOVFjOWlsZQU
zRMeEjzP8ibLK2y/Y+WSbTe2XIjZJ5YXMZYXMZYXMZYXMZaXxlJSNA96SOgx
Vi+wvMnyCtvvWLlk240tF2L2ieVFjOVFjOVFjOWlsZQUzfMeEnqa1XusXmB5
k+UVtt+xcsm2G1suxOwTy4sYy4sYy0tjKSlaj3kwek0goddZvcfqBZY3WV5h
+x0rl2y7seVCzD6xvIixvDSWkqL1tAejtwUSdgur11m9x+oFljdZXmH7HSuX
bLux5ULMPrG8NMa/RlJeGgv+h13G2i2sXmf1HqsXWN5keYXtd6xcsu3GlqtR
4snl15Y8ufLw4xguu1EEc9+JJN7HJ76PGN9HzI1/sgk+3vqffCa8iGCuvkqY
98sk4sd0W7NlkkYwpkfjIqYcHkz50L62JfU9OH3j40eLghn7mq0vdtzB1p8H
1Kde2LpaVA8ZadqTKjpFM/Y4W78epDyYzpPWH6rBUKX/gwvSAlI+fB/rE3G0
xfUx/WfngJHuSJ15Ze/hoNKc9i825MBMzbr1Q/o4kXEq/UyRqF8sN8ozhmP+
MJy2SwOZ/LF2HN/+WE+03cPLA4bTdgIvHxiO8oGYS6+CYKw/xKNa46tlvs8n
5ablMZ6kh+GYHmJMDzGmhxjTo+W2nmCMH+sV40eM8SPG+BFj/HQ/qJcIx3ZB
HmDfZ8PpflTPtFs9qSda7utJf0L8v55sPv67PAuYdASkvhBjfdHyVkEw1hf9
fr5E+yKm+SaexIcY40OM9YsYy8fGj/2Mzm8Kk98UJr8pJH7EGD8bjv2Urmde
D9Fy3ijRfqyeYMuB/Y8ed0Ux45Ioxm6PYuzaKMbui2LsoijGbohi9J+I0X8i
Rv+JGP0nanuGteXfqa3csQS3ZndMMsGtyfmkE8yVL0fifYyXy18BiXdJ67OO
YJZvMR7EXDl9CMZ42XD8jvtZSMIRY/iJ1v8kEsw9Uwlubb7mTIn3MR0sH2Is
P2L8ni0/hnPtn0fCObkrIuFcfsUknPu9mGCu3sqYemD9qz6M3KL+lqxflNv/
Xr+2TH3aMu1mS+oHcUjh8OBne4SwM/vDJuPAJ6S+MBzr+79/70Hki27XVJKv
zgZWs8e7C+HMzoZPM9YZw22jQdKrjWPhWs+qrV1dzSBy7cNalWV5EHHKykLT
54NEeWl5DiT1i+XC+sVyI8Zwjq8qSDhiDOfas4qEI8Zwjh9qSDhiDOf4rV4i
P8jP2O9Vzjh3zNY2IfWG5Xu15axSQ1wU068EBBdNtxxl+ipVoj1Z+WbbAzG2
Rze9Upspw22J/GM4yjv7/TXXeYHH79gTeXdQWJ22cYMXKM0pF02+VQmh4LZK
RzmMvI/tjfGz/YnFdH0XSfQvur5LSDhiDOfqv5yEI8ZwTp9UEuzVmn61RPp0
e5cw7VsugbEfYPwYjhjDMT0MR4zhyK+IMX5sV4wPMX6PGL+n5QB5okHiifJF
80gKkVNa70YxftgoEg9dX4VEP9HjPxGpZ5Yf8HfkX8TIp1gfNJ95kPdZfmb5
GDHyBZs+YkwH5YfWl4GMfglk+FDA6NNAkh/2e3wf5R/DMb/s96x8svyHGOUV
MfIPYuQ7LB+mh+1Hpx/PlM+D5Afzj+/T7Voswa/4Pn5P81YxqXd8HzHyLxuO
8o3hiJGPWfln7T+UW1pP+zD604PRlx4kXiwfnY6AyAuG0/zLyweG0/wrYPhX
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
VgCZG3S3hL93A4Uhck073AUQWmgwPqLnY/ioLVej2i0CdszeKR939DEE+kz7
bSuIhLHLL42rrDaGAZsKfnufSIGzL6wXvxxqA0uyjTOiQ1JAVv+P0df9NlDV
WBAw5lAqtPua8uhpP1tYfWtXqrA+BaIOTXM55mIDDQavbeb3FkPvHotvQag7
PKvIm+0PYvCYXxEV+9cdbLN07FauFoPszdHt8gZ6wLINl/2cZxWDdrzU507D
vUGs91Vd/3EpKEmpaqyXQX9IJJS2V/5y+6oxsSejyn6tbV9sRfRscuSN2lWP
nhA7b7f2TYMzfYzJ/t+4X/d8Jm5xA2FWu7DfkeVQOaPaR6tbMNScmLr64sFy
cO/yWrBjSxBse/r79OjT5TBMe/Th0hNB4FbssanxoRhmbtFoV3PGA9qtnPFi
aKciSFyVOjhF2RPWPNb51+WrGPYo5nyUGeAJi1ec2vHtpRgsFyxa+/i2B3Tt
36f/8VgxfK56+np6tgek1pxxD51QArtt9pyVfu8Ds6+NPeqQUAUXhxXODbmM
8+NiKOg1ZUFsljs8dRErHk7JgU+u6uol3k6grrR8gNGKXDDLvdfhq54z6F8o
qIquyIFZPW6fudsij+f2j+10siEVajoP3+qcaAsa72WLDBWzIDd0S+jD8W/h
SlPJ8W6FWTDkuPiFXad38HFb8Y6lh0pg0CoVp6qevvD+1b8cE80ySFhvtcJj
ZQAMr1ikK7O8DP7NljWYsSYAskcsfmN4qwKOTDztvOgcf77CBOXsJv0cG+JH
PfMoWpA9NBIWt1veQ/l0KqglH2w/b6wt5F1TLjxizZ9XgPMDL78fcx71NgjU
vowu23eH34+L61OCjh2t/TreHcpmrL66un8aBEcIrrz+bAvKA+onD6zk55PR
f3K89+dDWpaBxJ6bHHRMeuY8G+gg4/vVxpmf90J7J/R6e7f6kChiX/u8jv4y
Z2AU8atGf1cdLP3gPemHev2zbOOmGIPjrQnL/SzC4EN9lb4w4z68G/50rJ5+
GEySvVxze899Mm7+kdZwf8H6Z7Be6f4xnfQEOKDj8sZ0w0s47NZ8tqNhIrju
8urfKeklma+Q3nfqmrySI3i59lnV6UIm3FVuv+LTZEeI/fVtxi1xJux9Pnqg
RqYjWa++3mGr7MjdH6AqNm5Bl2V5MENGGCvl8wFUw8072v0ugpEQ9F3B2wvM
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
QMBwRe9qFcn7FZcP6zpC3j8RjM9Ns87+10DsiQar1GnW7ZKhb4X2xsqn6fC2
Tud2j0lvwejsvIezzxS0yUeLvm+Vj3xQeOCX/mJ8Dpz4s2yJoX4l9K8+8emg
VC7sOdj8xVGlErI/7nyhu6IBPG/FnxkfUA299jpe6j6sjjxNZhSJZEOrwf/K
ma9b1jbAQu3dVx6OSYLhZx51+uBjBY89Hk+6YpUEuqN+6KXrv4KqBy9V7mcm
gflmm3Ha7pbwU+da+4aNSfBwdPBu+d2v4dPDzamj1oqg+6XBDUNuWIPnij+i
5sMiaLia2G+F9CtYldDp9f1LIshf8FVn2gMb+Nf7jKj/AhEIM14V9wVr+GHd
dGbAYBHs9HkuN7zZEhZ1OGW7yVzyPsbNY6cv6jfjLaTcN9a/GZFMwtGukv1x
pejav7fQvlBm7Zhmyfsau0gnf1ezdSV46+7D/2LlnMHDbqfm1mP8fY4xWyrc
rfX59cjj1ReovxksuZ9+Q/qbP4PSvIm8LGlt32B40tq+/H2O6A+z2fJAf116
MAhvlyiFJvL7PS732XG4XrUBLJqfhC+NTyV20QDhbOexXcPI+meF7puXLRgh
AAfvPg/HjZK8n3H6wNEHr2yKh57C38VzY0PA+Iju/BF59yF2cf+Mde9D4OD5
+emFpffAMHpK7NEHITDvVucT1nV3oX3Nyy56ZSFwMeHi4rPDHoDv3h8J17+F
QO6A2xPGmd2HY1mbntzrFAoL9prIZnW/D/d7LhqyLSoYRm0ZkafYzQTUCzL2
e9xv+V7J5Izx50cQlJkyzPNmy3jRVSMmzdscfhZMnmDmHQE3tJd3HnjXlKyz
LF124MwRZVuIH978bfoI/n5IXL9huW/TGosb/H2RX399OqP3iT8fecf5OaPe
zuDvi9w23mmt+6U4wg9lxfqiTdd9yfhAbND5k4+mL8T1jHueGcGfH4H6vgzC
mi/P9CZ4vr/o3/59vsSeLlr2vnHAK38Yq7Ln4NYtkvdJBjqmHp5mHdXmR04l
z98j9la5ZCZA1Kj04CNPMsH09feLTwd4wvH58Z7XDfNb9GPXVwvGVoDyofh3
m9rlwTRn80UvFpvNb26Tq32LE5cnHs6EYdeG9VU7VgXHN96TlT6TCNf3Ptj8
rVctPA84P/nxvHro+GyKxZGmGtgUP71/J3sPyN9y7eCnpHow/mu3pMPnGhg9
qj5LocXedfs7aX/Zi1BInmzW0ajsKdRF/jp6sFckFHR9FNlz7jNYEzi+4flb
ITR6fyk3/20C2R2uRSdNa+H9bFmh/sVncHf49EuJJyPBu9v5Kab6pjB7dumk
eJdImKda8MLhngnIJfZd73EiCvQUb7s1u5iB09RuSt+soqCyX7yfWNkU5ptI
956bGAXbpXqFhweYwAXx8dzsM1FQteJn88DpL+DH9sMlrt1b3ldIh5jvpjCy
IqH+RVgkKBn8NO/13AQOPtfw32wfA46/NXv/VHsGXu+fmE8LiwHlvZUySsfN
wDyvw4xU7xg41EV3Qsj359Ak83J62NkYGL+jt/y4hpb8jIvUGaMVA41bT0tp
2prC4wCDNXd2RMPGB4a7P619Bm+8RLmHx0TDn+2f/f8+MQU/l+GHltdGge2k
/f26ikxAReazv8WFaEhtchMsufkMXvTweDXFMhrCff0sXQ+Zwe9+pwzDQ6PB
7UqY3iAtU3D7en+46aBokDn/ycrw5kvQAku1SaJEGGbmqVpUYgPyEVOG9Jry
EY5+mbR0x3hr+DZ3XHFpaCIM9qy8Ju1jAWaDjZR1qkTwc5dV3e+Tr2G3QtKX
AzYiCJywr9cSkQ349phu81bUEt687oPCptfg+Pme5stqEfx+PbBsSQ9rMn6a
07u/e9xYO8KXO/qcdhHW8vdxTrd+rWsU+Z5gt92KOiuaHYl+jK+1sTL87U7s
5Q5f9GI7TeP3Gzy8dfS4tsE7gm1KpyfkJLqQ8eCMmerS6r0DwCXHtUJpkuR9
ngGGZ60+K/qDR3sjeD5K8n7PqDm7l76bEwDm9/udH96Vv38D9zMIA69sHtTH
F6x0J7wv9+Lv+0T9/WP0iF9BM8NB42HQ/cr+/P6FEp2cjTE/6sCuuZ1geWQy
9Fn/4/LwqS32j76j9qD+/Di+WVyYdCjBnuCKlDjXVdvsIO3830nb+kneD/oh
QnXG2ilRMGr5R9c3apL3hQ5ytPJRdwmESi2p8V8n8+fn43rxqjnpF9TsQ8n+
i+ib6qGORqH8uDn60Lsx66LI/MbJoNjlh1cLQaOv+n3pz5L3h2Yrdr60+kUC
HE/XvfX8kOT9ocfnK15pFxwNGno6/RT68+vhBwxT7LR4rggW9TCJXzHEDu7r
Tv33tUXfH6raHRmsZQfPrRcfMB6ZDPIBC/0n7rWF/QEqvWO+i+Cuy/HvQ87Z
w4zpL5tSdmWAaG1dlnrYe3hw+lSk2/sM6LV0otrGvW/B4FzpEsv0fJgdZDJ5
5Ed3uL7A9etxYT6svFskv0TFDU6Z1Xh2UC2AAZUpg+yHeoDKyX2jh60pgB8/
S1aqTfaA669LdI/YFkCGcuHA3qVusPFkL/Mg5QgQ7plh9a2XKdxfM9Jsn5kA
hmx2FkZ1ewlHQudNmvUkBVb+zt/rr28HuqMv+1g+TQGBnpaZ8x07aNTckTkr
KgVCl6s9Tm2yhal3TsV+XZQKNTYTRk12fAOP1mmM299iV3ZYajpPoGULs+xd
EnotSwUzcfHCBT72cFc0SPnQ9xa5mad8pVHhDchOmdnHQyYL1h4/u2zHFA/Q
VtjxuL5fNnzv6O6eVu0ExokXZpv0zoZlOTaXmg+5wrSq0UNSr+fCnO26Tz2l
PMAuym7ioqN58LuLT4n8azeYfKDPIFu5FBg7bszlKe09odD705r70QVQ2b5R
0eOFB4yqWaF4c3IxWPY7e3zFSW/4Ej3iw+r2pTD+/KHTc9YH8udCO2Y2/ksy
IbhDp4N/r05+TMZZUkX/kXczgpOE3kYzK9F/HQl97R31Ng/hscKwvz16WRgT
XNJX5Y3jbv6+VeGR7y9di5/CrDEexvX+kvetvrHtXlZhbA6WntfifLry9w8j
f+2Y0LfDxXL+vtXl6dXHd5RZE9xP6LFeT+0VbI63t1O1lbyfdXqdxl2Ld3bQ
vttGofAOf19rtMzzxsWOZS31E3P70h0BhIy8I3dIrRpyp649JXdAAC91x23r
Dfx9rbi/Z/0o18zxcmYEq7R/06NxAh+uOejA1ounjAneNnmsvbQf7z9XCt3U
POeiObFvpMs7jVCwcYMB8fN3dllQDN4GIsMnHwPhwJwZd2v1SiFZ+WCIhWYQ
hK9ZvunazlLYM+j875u9gqBhLlzYICqD0vbBTrOUQ+HggutfrevLYEHNT6fm
s6Hg6XrMceC+clhrYCtUawiCSMfwgAWdKuHcLTXHyZMEIBR8/rn5eDV0VY2Y
XyWOg6SkDkO7nK6GR8mz/H1q42Db9YinorIsWKGbeGiihidsfDRVIy8qCzbO
DOl1aognpK3WGv5wqRj042YpVW5sGZ8NNnjiMVAMChf1X3ulecJ88zEyNwzF
kGbhc0sn1AMux+wVndUSQ6Z6T0OH7R5gtG9AaW8ZMShtVXhW8N4HjpU5Sue2
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
FxVMpwqQwz65XK5hBK6en279Z773b//31K8jVuWOTQjJuvRRjzmK8A9Ea6/f
4NiURPh5+v3palw2pmO4gWqi82w3Bikri4zeknzy1ffTTQeV0+G8Qse3T7wH
ProMFwPKUzDMZP9W4c4QFnE5GG4Snj+3Um/LJW0ehbxJgdkT9zycC7CSOL1p
BMHqpb8o9gXIT81cc+AKyRvX4D8xci1kBDscm7fcukHyxUUW/PwfEbHg5/+X
N05Z8Ot/JPYLM+dx00UdyMcVao7ocYVhlPuFMsnr5eNN9M2gy0eG8WGkTlRc
bT6/jVw6x947hFN9161DW/OIn//06v30Ro0SKISqxydMD8Ff9iYXO1PJn/ig
/k98kI+Sbu/Oyh31RP3vkMih6aef6+CbxLDp8NNsbF3LHjzDVI9ld7u+uizK
gWWOw1zxmXoYX2vT0FIi+eGNx6M06vIzMDF9f/ELKpL3/jc/lkw9bjkYmYb8
krLs867kvve/+QnT8WGX6KspmKhrCaST74e8xaO0MaX5c4mV673i6X7Y77V5
li4xf24NLN85Rd9PxH1LTELdez73gV9+WGX1syqIefTTUM30IYQxh0XKrQq1
tpbUnddJ3malknSZhnQ/in5yZHFwNhPXizdHC/+V/8zpnHDLNvrUha1Jb8+9
H8rF5wfVLteXdEOnrq53yfo8yC343Wr/+N3ScCI+wfT4AMlDCpNa2rcfA9ji
rXCk/hHJ/5bZdXzShz8atyvD16VuJHnfo19vaygMkLzvkrXyX5tTK7EJHQ85
BKMRp3rfL6owDWe877/VoW6BH9WdGV1uCnhFfJU1XzUgz7Qhu2tFNJJimn5Q
AluxY4eRGc2iPqScKmbhmc9bztjcXZ7+vRvLfkll76rpwh3FPFEt705IMQit
42HoRZfODee0nW2YEIsublvbD6MWCe3XFyqwcbv1ummXYVy2O33kFXUdbggb
KYXP5w0D99gFRsvGoWd7N5uJZQie08mbd3Cng9pkkRMdwxhOdt8fdumg4JCC
fdDihyPQv8e6vSVsFAKN35pPWIzANmytxh7eaNS1rdUsrx+DFL1HguDFYXBk
0TkMFJC8qZLGa4IvuCOJ/cuHPYQHGahJvrPkG6/TO8vJetPrLHqpa4zlRP7h
9HVD3lfpEkjKxWjZzY7hc/YewWSaEmy9OZvfd2oMOn5tO7wPV4Hehk8nfHwM
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
Fw==
   "], {{{}, 
     {RGBColor[0.3709018114506338, 0.19213129990681932`, 0.6383276816856833], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHmMlWcVxr/vztx7vSsNw9LGpCxuDcs42gEtLTQdaJXNYtFAmhSFQlug
VMQ12hKWQhutIYWk1mpECkwBgRArhBFlhgTUzgxLWYaBmqI0tUSGUlPlDwXq
+fE8k/rHm+/cdz3vOc95znnvkDnfeOCJTJIkH6RJUhPfVfFjUsjnQ340nySP
RHs75HbL98fYMcvzoi3NJcm5WDgs2j2p+soxf15GfeMSzWWvh2P8QEYye34q
vrdFuzvkKXn9bgj5cwX13V5KkqerSTI89hkdfXMzkqfE2MroHxry48XQLae1
rHkl5K3RVsXY1OhryybJnFjXEt/fRRsb8j7LH4v5nfE9HO1kyNdi/uXaJOkJ
+ddxid2h7+44908hF2LOH8ta1+K1n/a++fhuzGsv7MOZrdE+E3O21Kif/Q9k
NUZ/bUZzuO/CuMvA+C6N74MFnb81zjpbSZJb4i7d8Z0SY8tDnhTfy3HWwmgX
QteDsf+CkN/g3NhzZchzUn2ftp1fz+s3cmd850f7Sqo9WPujVH2PRbsYcxbF
9wnbgrX4e0W0gTmN1WV0Bn34nLn0Y69lMXba49xvin26OvRcl5df3slIN/Sd
Hfe5FPNejTtOT6VDt/GA//AdNkNmP/w8xf0rrDc6nw35+ZDPJdqbM7jv2rzO
fSXV2fzunbvW/Zvz+o3845LWzg37fzHO21mr+6zzfPbA72/VCgP/NX7A9qUY
+2rY6JkYvynuNTv6pvVJkhOx54Mxd3RJ+PlhTjj8bUnxUA0Mr4+1v6xRfxK/
98b3UOiQiXOejbY1xkZUhaP7AyOdJZ0/OezWHWNLYs+ZsWZErO2Kb/+Ye7Qk
GzUXZMOncrJbc05xwl3+XJRvTlTUxxhY/Gv074z+T8Ye/4yxxuh/L749Wflr
Wiq9roW8Lea9Gt9KTlh6NM5YFvLk2GdiVVzw3divISe+gBe+UJU+S4rCLufi
l6lVrb8S/cN9l8El7Qf+sSNxf1+c3Z6RrS9ydiIModtv4vvNWPtkyA9U5BP0
Zm5N7F8O+WjY9gf4wvH45YrkxV7HWC6juxH7+KP4kZCjXQocvFzWXbeEbeen
0gGbNBNntcLHy1nJ4OqlssZnxTknC8LN5ZBXZXVezvfo8T5jMtIB3V6qlc7g
HDzWZRU7u7OyO346ZB+g03/K8uGvyvIteqDDR2uFafCMHpzz9apwt8o6fL+i
+fOj/3xRZzwbfc9VxJs/ie/airhsXUX8SNyfqQiLYPKnZcULZ3NuZ9i/Iyd+
brdMXhge56XRukJuJGai/T3k+2LNvxLxwAh8BqdwH3MUPEEuIA+MjTYyztsX
v2tD32pGuex49O+I75VEnFAf/dlob4Y8ivjI6Iy20LG1RjwNl3H+iWjbQ76Q
6NzVMXeqx3al4njG7o3+CdH6ZXSfenJCtE3mWGLvhYJieIbxhl+x8w29vWaQ
1yEfzmmMu/X12K2JYmauz2lOdaeh0T4ffRlixPPqvW+S0do64weM4m/mNfi8
zxYUS+TSvY6lplQ6ELt3cW709Yl2PdV+fb3nKXgzle+6U+mEbe/M6I7kt9uc
0+GckbYTui6PuaNS2RYstjlfEN/EOfG/OFWOet+6cvZg32+c/b7CNQh+W2sO
h0MaPHdIIjxQy5Scr8nV2O5rMW9itLdC7kp1H/x7OpV++Lfb+ff3cFX0TXZd
dNJ8fSq+d2TkA+xdbx8Msg/G2oYdVdVUT5Lbi+LrtqpiYZzvh70arDM2Y4zf
5NqFtgNYJQ/go4xzAvkA35F78N+RWHfUNsyV1D+joLnbvBa+2FGjOgP+LpjD
tzoO2JN8QPyerChfrXduAvvMwT7oxT5XXKsR39+K+50oilMOxbmfKOkc6hpq
tz61wjYYO2KcjfXvG7bK6e53W4Y7yB9HPZ+1fA9bbjCnYMOhzqfk1aWuqeDC
RVXVhO3OJ/Agdcpo5+XJVfHcvpw4tLEkPTsKujN3IWYZr3gOuQc/knPB0HGl
7WRBVXn08fjOSsUbYIb46es5G10/UzPA2wftj/HEn+MNn+G7JPbZ43iBDzc7
bvqZJ8HFgGhrMpoHp92cU62GbneVdN9flJRnz5oTW1L5D/lMqhhmLXdDp52u
6c+Zd8jHYOp7RWGXu99e+DD37PA9kMlBhyuy1d+KH45xFvXmQc9pcC2Af7Hn
JnMmfNxmrG61DOZOe6zJGGw1DueFjw/EHeeUlVepVajJPl5SnNRFf0denIIN
V7qehXNusr3hB/JG1TLrO13XzXAdxn4nHRfninorMf+4/cs+dfYF+aV/orcO
mGQf/LXYPvtOUfHA+4a8Dz9XnFP6O09xT2KafvYeZt3A1GrL6L/aeRP9h5mr
qcnfcw2/vyp5e9zjal7+wPcb8sqp860TfWAJfoQnh5rPs5Z5d7zrN8Nq52t0
uLWsHPPzsmrCXi454zuz52LL3eZbOJt34hzL5NyMcwQcCH7hPvQCg8ONQzDQ
ZFvx9iN/HSspBic671MzEC/YH86e5Rjs7/17+2f73El+W32pqjoCDFJrLXNe
Ys5437fLnIwdF9qfHX5P8X686vcRerV7L+oc4paYJQ88ZX1GOddwF/D7jnMh
mF7uOH8o1ZrjzmWrnM+ogzr8VoJLNvptjj83+E2Ery77nYh/NtjXj9nvzJnv
NdRUbWA1L86rLwq3cCp5lTcS+bPZ8o26LqtzwTa6M/9tn3vJb1LmsoZ6eFtZ
eNxSVj2LrdEBvOx17cH5LX6nU2+/a/0XGHvsCTZb88LkGMs5f9ssU3c3W88D
7mcdex+wvL8oHerLejOu9JuU2m2Tfcrbg5zBuwp7d7r/iHPsZPPJ6+aUF8u6
6wtl+W2V+eG1vP5DwUfUkK9ZfsT91DHUwmCln7G6xjUqOAHT4IF5rCV2XqyI
O3ljzbdu+Laf6y1wDsbBMRheaDxgS3LFGs+hBiG2yMMbyrL3+rIwO9yY532G
Twe67jpmnf8QZ/eAv7LyDPUc53U4b/f+/8N8sHHMtkKe5ZoK3aY7xxELXd5j
tuvKbnMIvr7TXJS1TN0Er5xx/mr2u5Y8Bx7GeH6357APtV6X+Qc732teABtg
nDcMOeoN58cbsWjdJnh+7zuCfd+0bXuMVfyzy/ujP+8QOHW7fX/BPt1jjkLv
PeZGOKbRNm/x2gHm5hbLc5zvHi4rvsAbeu/wnCuuE7abQ3ZZRp/ref1XQxz+
paA4+Zl9fcpzxpf1znymIH8iExeMNzrXUFvA0e/bhqNsE+wxyrilJqY2Hpzo
zXrA++C7evsl4zlgHvxTT/euu8P98Bb81fvfFOfy5pxWUK3K/yLEK3xLbD5v
rsLm/E/QbS6+x35H/0bfBzu3urbAL9T61PynKzrnZp8FzsAS7/El7p9p7oBD
eIPSd4vn/6Oi+uZiRf44awx8u6j30L+LsgH4wA7kjuv2CzmE3z321zXnlDZz
c854neBcSVzyvwSxyRfeBIdgibxF7UDOv+o9+U+K2CpVtZaYAevwa9H/b7CG
WpR6ZofjcIB91GR8nnctcqMmyet/uVb/h3HR/7cs8r3qjJupjnf++6BW218R
Njcbe03Wmf25b6u5ut28B+eQd6j/4E9yPm+51LFWbxyCg5muH8BRaiwNNuaw
G7XSB9af/xgy/4fDxHcfZBwP9pwR5swm71nn/pFen7Vf0AHMzTQmsUut8cM7
gBqNtZyPXHT98pBz/XGPFW2zWbYb+Xq6uajTNQCcP8FnDzG3TDefZM2R9KNj
jfU/bb257/8AJQsQ2Q==
         "]], PolygonBox[CompressedData["
1:eJwllGtojmEYx+93ez087/u8D7UWUgqRWolZ+LDyQTE2zEpKqR0sOW3MYWJT
U5tlfEC22ZYxZRtS1GpZljfNxNaUmUNqDonYMh98kvL7d3246n/d1+H+39fh
XlBcXlCW4pzbgUSRhoRzD6c514ecB8dD54oizuUiNb5zVwPnvuLYgf0E9uvo
s4nzZziXxLc57tx67AtTncvE/yI+j/FNIpfALzibiT0D+7GYcwPo18DtyCh6
Dvo4+LQHJl+Usz4IBsSnoheQowpci7Rh283937AnyVkKXkn821TjIC5/8CnG
Xk2+DcQ/xccn9h/ShG83+gT8f+F/O7Az2erRffSt6KPYhzlr5e5x8tWRvxYZ
BDfhswj7F90HrsJ/E7XahTwJjaO46o2vwBcSVlvFDMWtZqrdd+JvEH8cn1L4
DsG3Flsl+h70EfQ69Jdxq+0Z8o+AD3DW6VkP9oMvJ6zWK9Az48ZBXDYilXCr
x96D/R45PpL7Afok+gRyH1yIf37EzorAa4jJc9azLPK9Uzz2udz5HvyJHAlw
H1KNfxf+5yJ2Noz9J7Lcszc1g98kLHYOMgbeQkyNZ2/cDG6lBi1R49ACnsIn
C/tf+IyS+xD3nQKfRPIT9ka9VWfb0J9j7/asJvtUW85ysM0jZza+bXHDY9yX
EbOeqre64zc4nbPt4Enq4+HrQsO9WpKY9Vy91x0HQ3uz3q6afsZ2U/M0nV4g
PdjKxdezndJupWFPidpM5fvWU/VWNVatC/Gv8GyGJ8Dtgc2Gcj7C9whna/Fd
it6Jno09Tf3EZx14Sdx6q5leDB4IjLtmfhC8yrfd045p117HbPfEUVy7AtuF
KfL3k/9uYLgM6Q2tZ+qdOIprSWC7Jw7iUhGzXdPOa/c1U5ot1VS11U5pt1SD
Rt9qpFppZjqwpYfWG/05s8AhMckU2/EG3tMY2K7pD/pA/Fnf3q4eq9fiKK6a
0TuBzYhmRX/GYXJdwb8kYjmXod/ybZf0x/THbOe0e6rxat9qrFrrDzmKPRd9
p7OZzVPvAvubNLPzwXtD+xv1RzyL2R+mv0w78AMu/QmbZXEQl/8QA8BS
         "]]}]}, 
     {RGBColor[0.5260161465749538, 0.4618332377347693, 0.8563596443508775], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
VJaMTTaG7ue5HihI/pC9cbnoHhRz3Gh5ge57Yp3zo8+HMXbP+LYYXJ9L1gda
tvA78OVB8+dEt+8qSP/7FWSLt9vkoGtl0PRpfH852r/JhFeOiO9to1wYY7tm
wra0GxP5PHTivVi3veMD+AGt0PwuZxhjL4n+7aPeK57PjvZ+NWFV3rMGtuTm
kuKTFcZG4ASw4VLjAfztPPtl4oj5UZriO6PeK8r4evF7sM8CPg72mYKvni8r
LsC/v1jWHOgXutW8TjLxQllyBp6aZRy1NOolYKmybBFY4hx8XdRPR1kWY98t
65k267zgtYZUZF+x8fO9LvSzBv2Q52OjnluWfrZzfIY+vBH9ZjgWABOsqBdu
/s+q9PutqnD7QOtOX585z+CKPsaL6PsM6xSx13PlnWs+Zx7+znLF+DX1sj/4
Vvb0rO3eVu+RNn67g333DZlkfWac6ZzY79Hx/o8V7W+W97gPvImyb8z5aE2y
MiITT6ea/4xnnuGZ+j/u+AvfvhyeE5um8sP9U2FosHQz249hxkPEW0t9Xq8E
Hb8Lel6taPwyz7nMc0LPZfYRjIe/f6oX3nvMNBBXDnE8SLu529sSYUrkAd/0
Uyrbc1EqnHKleTrLuB4+dE3UPj7RuDmWpU0NkiVMTs3vmRt7Ps9ncYFt1JW2
E1f5+ZWQg/oY/3JVdnWO/Q74CXkEU+1S0ZniWw5wnw6m7S3LeaMxObiaeOAt
yzCx+/3wtEHjDvD8+IU2jhFuzHSmnO1w+/+x9if4oRn2d+P9jf2fie9NtL81
3mNjSfEu444MPh4ac94ec260TUXuvygI9zDv5gbxjrixq+frEeWPQU/H6DOr
Jhmfa5lvMM3trXdfx3p71SnuvrVe8eOXsdaKsuRgMXmGgubH3mJrwcotfC7Q
c0m0byyoHxgG3w9/sNUTvGewadN64aSXc+VlXop6Sq79nlWTDMIzcNKX0e8L
x1TINDhqlGV0jJ/frIpvi3JhazB2z5rio/sdT3VwXErMyPnxDV3fp14Yl/k5
98nuv979W7mNP8ZuvFwTTx6MNb+JvbxpvV1QU3tmVfMiO8g+MUCvRLEbtucN
zwNu4P1ZiWK5sywHpxaFzYhZDs1U35cqhsL2kke6JRPmuzXqq4z7Rth380x7
fUG4hefRMe69KKPKss+0m8S3T0viFVi1ZdD/XfDluVx5P2Snu88NbMnZ3Z6p
vTWTvyVeQA7OqriuSs6Qt5uyneuhexsLwkVDvR41WPgZ94Eecibk1IgBl9h2
sd/LrTPDrS/EwPDsV87zcV5npcIbe1QV14NF0WV8GTK9i99lfv9TUbIFbiHn
lNq/vGVbTf9fOkZ6tiY6t9rP9UilA7tXhfHAd+TKOnsN2s0K0qPUPqe55+/m
9o6cw95+j10lP4ItBVNdV1asRc6yqW17Q0G+nXwTvCIvQt6JXMFE4wTo+8H2
c22mmHd0Lt+B3W9qeUfu6U/s+1JB8S88rRrTvl+QT1tZEE/2Nt/+FXsvBk2v
VoVPmAfd+W08vxhznVcVzs2NdecXpL8HRfupGLsi+gyLPndEWR3tO6uK+5fb
Rz9r34o8QOvrddr7QucD2DP+nNzbauv1Eusp8ka8TL6M2B6c8JK/L3Uf+IOd
RCbLzuHtyOMud/6h6DHb7AfJ8cHnKVXZ36lV5UjIgZAXgYbX3R/dfsN2Zqbb
nC/2ttE+4m+x7qqCeENehPPEz5KfYz7sLThuvtflrOebzkJRuR7yGA9VZaNf
qykGyC17YEbOhjWfMv3MD84Fg4F1ObcVdTvzaTO995cLwtzEoU84Ht3s/XXw
WXRzu5Vt2MKy7NcAt8H5Jzh/2Kkq2ezotRaVlRe/0H0H2Pbh38i7guMm2/di
R5tmyp+QR5mby889mwvTYCPIKfUwDrjAfq+/n5Ev8D35DdZaZNqINZqUFd/C
H3QKPn9bUH6V5x2xELa0U4N9Ifa7orhpQi6Mv93mRrmoopzwXzLhEsbtiFFu
tP06M9mJx8mhTrDMLy/JJ4FbX43xI2KeITH/36qiZ79491ZF/vVt8iVlYX2+
gfGm2U4S8xD7PJ1rr4vNa/LoMy2HxOnkbY/wObawrJ5jPMg542/wOwty6e6X
1l9s0pf2lS3tl5ExYpNZlgdye9/Y7yM/tMldfGR5IK9MvItMEfN+F2v9L7nl
qmLZ2cYknA35COK+gbb94IIjQxhGxrsPuNsqKB/NHQ48gw/EMOQD4ENjojwe
fOhlf4aM4JcXWx56WU9fMR9WWP/Qe7Ak9BMnHm6bhp5ttV340HaJnPvjdYpp
iG2Ip+AJdoT+xGvEWuRID7NPWJtIL4q2G6fVFPedGnWpIvqJZcnL5sbVQxrk
y7Fv3DPsUdZdA7xCnsnbcJeHzKNvHxWl8zwTxxLPnurcLOOR/WutC5N9Jug7
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
o1K7
         "]], PolygonBox[CompressedData["
1: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
qskvQg+M3Es1k2g2+R8Haxz1
         "]], 
        PolygonBox[{{2973, 1098, 2603, 2848, 2849}, {3601, 1616, 3600, 3920, 
         3921}, {2605, 2604, 3605, 1616, 3627}}]}]}, 
     {RGBColor[0.650070576201107, 0.6661447192262347, 0.9114649690282288], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3nYlVXVxs/7nvecwxmeA5TidOWIAw6JpX6ogbMiqRHkUJYZKpWVA6gF
aM7mhIjTlwyCQ1khDn0KOCHlhBMIDjinFhlaKgoqqPHdP+6bS//Y115nP3uv
Pa291r3W3meTYScMOb6zVCqd11UqlZU/VSmVNqiWSnM6SqUh+nCA0k9UPrco
lRaLfrRw2aCUb9zp8i1Uv6J2G4nJP/S7R61Uair9QPTomsv6qP7fWqXSEtF7
Nkql4fr9TdE/Tn5g6MM0lg/F5z39/nbN+aXi/59mqbSHvo1VvnF389lb+Uzx
fF30ruL5oOi/iu4u+vDwPUz5H2quM1J8+mgOS5mD6rylMY8RfbvqvKw614re
UHV+rn42UxqocWymdLnK11edW8V/suh/1T3Gpzv97Q6VT1H9zZXvLJ7Pax0X
Kb0n+tf6fr/aPqh0uuiHlF+jPm4S3Vv5jLb6U98zlV/W8Hg+UX6Jyi5WukQ8
Lmm47UL1u1L9rhA9Vek3Kh+tfIHKV9Vctkr8L1b5L0WvZI4115ml8oXMX/Qu
oq8oex1Y22VKW7FuygcqH6zUS3RLa/WS6B3FZ33RB2lO6yo/TzxfU/kI5KTL
Y+L3IZr/V/R7v6blBBmC370q203plfAeEvk5vGX+94vnLmrzZ5VdpL52Ez1H
9LiGx8u4t1P6rdJbHV63a0JvpXp3ae221Tq9KT57amx7KG2nMb2hPl9X+pvS
k/p9qHjtr/pbq944lXVX/y+o/HFkVuUHRQ6RnbWzFsjkkIyb3zt0eG58p91b
SueJXtnh9rRlLRk3Y76u7Tp7Mxf1N0n0VoX7OSh8ZistEL1CbYdp7o+I/qbq
3qYxrq/xPazf3y+7/B3V+VqHx/OTnF3mcE3kFJk8Qt9/pDU4SmmZ9mwLjeFD
5feo3/kVj+Eltb2yYfn8VPlW6m8CsqT8TP2+VN8PlFxNU9tdxfs8lZ3aaXqS
vn05c2a+S5W/r9RP9EZqf6Tq3KL6U1X2gdI2SqP1e4S+DxLP87VX/VXnT5wJ
lZ/JWVX5CJV9pLq7lrx2H3dYJo/r9H4eqvLjNN+pZf/m+4rUv1k8p3FWwuPj
lJ9Zcx34Me9Dyp77RP1+u8N66bSa6c2Vfqz5nq06D2lcv9FajRI9WOlo1Rmm
NET0GM1xqPLrVOekpr+vrbIr2tYZ+2ouV2ucW3a5/nMVrxGyt0/dso2MT1J5
7+iZr+v7wWXridHKhyntwjw0p4+q/n2Lxv8j5eNVPrfsNS+UxorPhWXP7X+1
x+PFs4fGs0LjfUlpUNkyNjRzv7Hpc/p03X3um353bZreW+WfIEOR93Wb1vPf
0Hyvqnk/jlX9fprvKnSsys9WGil6vtr26rKcIC8zNI7pypeq/GPV/5foAarb
o8t7CK9V+lZXP8PrPjdbRUe9UbUeu0H0v2rmN010H9G/QJ+LHtUw/YTaXqTy
vjWP4ynxu0N5f+Ud6ufO0Kep/gmin6zbHjC2fsrPYC9Fz1P5cv3+sMNjuC70
tpFFZOuAknXm8tRhvMtCb5vyttJedes0dNv7OQuckXZ07kDWUN/20vj2VN3p
2scrRS8Tv+X6XVKdo5VvV/PYxqlom5rHf5bo/3ZaJhg/dnaU0q36fUHVPGeW
bEOWxa5toXzLTo8RemnGw56xZuc2fC7ZP9Z6VtlnYbLqPa10TuQUHcM5Q89c
VrjOg2q7Vtlrztqf03Kdlwuff8pqHda766nOY1nTBUrdOmwDmf9yff8/yckd
YImGdQkYAEyCjpug9OcOyzoyjTzXuvyN8gFK88NzK63DTytu00h9dCw2HfuH
7UMm5mVs4Jn50QnvlI03HqLvhs/oVeQ161nmfnXTduOHytdvWD+jv3s13O7f
oodq/g+Jz/FajzuiD8bq2/tdngM6aXPNd7nGeVfhsgsz1o06PTZs3J80l5U5
558EJ1yq/JPCsv1p3XO8KG03aHn8lzSt39Hzlyt/tWYZew0ZFc8zInMDshfI
w0z9fkppRtmy+kzZuuvxsmnkln6Gpi94vhI5Q0ZOjpzsrHkNVx87ts1rftn7
Ao9nw3N++kLGoOelDucOeveOz+330E63eyJtyZ8Mje0YqdQj7eaH54yK7SP7
NKHtOifUfY5HpP6rTev5I1vWQeiiO0X3RS5VPkhtf1E2Tf3fa81P4HxpPVeU
/Y1ydO2LNa8t414YnXCweM5QvkfddnyvLsvKCW3brRPb3sPjysY1N6reGPZd
/Cfq+3uxQ79Xvd7Kj28YY4+Ojbhf/EZ1+ffopvkcIx43lT1H7OCn4rNv1WM6
Tfnb2Cd9O7xpXNavYTszQOkU1Tmy7bmt3fT+zI88dGv6bNSUd1f6gHVTX9Wy
aWQbLLO87LPG2f0w2GSI6j2rspvU7jmt73sqbwbvQINt+gfbIfOjYpcndHhO
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
         "]], PolygonBox[CompressedData["
1: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
Cv3nYuT3E+d25Rzlnm+Qa+Z8R7qrCcxZhboRPpbiq0be8aOcUiVyzCv26zG/
H/91Vmys83POiIzZhd1V01TbhMGFxdvgb3XeOU25TXvUXsdEjv0L8PdbfD2K
PAj9r9EvRt8i8dvUHg/B9xBGzvhOdDeqOao9yiGnIp+JzkYxOFO1I3ZtU41T
ryJMLWytOxqM7s95115hyNHoSxnrlvGdbIAfiv7dAmPyYfD3RH5rtVljgbB6
6rt5T/UHviY+uuC7Oz4u0d6Vo7J+I3or38bWleLjMHxL9L/P+PwVi8JQwlLq
QfZrr3nXJvVotYVVE2MzYbwnsW0X+W0qBhQLzfHRrKxHUq/0cN5vWTH1F/jb
YuML2Qsr6k50N1MYq4v8vO4n45qj2nMCuX7GMd86NGYQdlgCjUqNQYRFZNMH
fnbq2iqbWcJb7HdL1j2Oep0ZzCnO+oyXRu6B1AvdwX/4J/4bMtYg8n/Qf/mV
cng59yDqRdYl7m1V848wfxxjTVQ7mNMh75yj3KOYGxYZMwk7CSMJK61JfVfy
WQu5G/5ezzp/dWW9W9A/xH9bydhU7GZCp3PGjMKOFZk/Lev/1Fn3H/ouq6Pf
rVpYFm/C0MLS6hnVOwqzLsN/o8RYR5hS2FI5XrleMVccOqcrtwvjTxJ2jexb
PYR6idWpY/E77F9JnSOUK5QjlCsql/Vmqumq7a8LLxb6P6xP3eOr11fNUO1Y
mbi2qCdfkbgmqDboDa9hv6Whe0f10Oqlb0/dO+fZz9bUmFjYWG+4FH/78+4N
VFMvij1Hc4WJhI1ahe6tdYZ/Qzcl9H9Rj6Be4Zexe8HB6lkjYyZhp+PIldHV
zvutqIe6NO+codyhN9AUX30SYz9hwAno7krcqytnKHcI0wjb6I5vFRaP3GuN
Y41O+HtKPWHOPcc2/BXlvbbOsLbiMXLuV81S7VINUi1SjVKtOsNYuZx7AvUG
O8ruRz2hesNbY/cmykfC3l1T51J9k3hStT82NhSG/lY9cuRcLsxaknfNUO1Q
jR2C7qbEb1U5UrmyJHEvr55IvZEwm7CbctDMxJhJ2Ek9/lupc7xyvWryxMg1
RLVEGGQq8huxv53oG8t6+Kp5107hyUroq+JzdtYYVFhUNU61TphhOPosbzBT
hgmFDTuExgvqb9SbV4jsSz73JI5hxbLuQHchDCIsoh5jVGRMJ2ynbyz61iJM
I2yjnnls5Jqh2iEMMzIypha2Vow/FfqOddfqaZ5OvWaVsvr4WWKMI6yjGjRC
2DQ19lDP92VqzCLsMh//zUL37OrddeebsO8duvdRz/WjckPi3kvfuE6Hrhmq
Hfqm0Qf/V0bGnoqXmrFzunKzcnTn2D2pelNh8L363hD5W5HelN7WD6G/7ekb
m761CXMIe+gb4NHQ38x2l/Xw6uXvjv2tS3fWOXQPpV5KPYF6A30TUHwoRytX
vxy7l1c8nRTeSI3d9U1pquI3ce1QjZwMPzB07OobjL7F/B+7t8K7
         "]], 
        PolygonBox[{{2446, 2445, 2992, 1108, 2991}, {3586, 1609, 2562, 3274, 
         3275}, {3275, 3274, 2563, 1291, 3277}, {2886, 1053, 2980, 2609, 
         2610}, {2438, 2437, 3335, 1351, 3336}, {3175, 1219, 2469, 3843, 
         3844}, {3624, 1629, 3627, 3807, 3808}, {2518, 2517, 2981, 1102, 
         2982}, {2890, 731, 2613, 3346, 3347}}]}]}, 
     {RGBColor[0.7639641859903206, 0.8474425820037733, 0.9134337338710479], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXuYl9Vxx9/d/V32va41sRFqW0ijUGKDWp7HREVEVkjExAZJQFkE5SJP
iAtWwdqgJiZNiiisoqwU5KJoUKNQbfEGWElN4qWSptg2XgBjWq/kUkARAvT7
4Ts+T/5498yed86ceefMfGfm/PpfOmtMd2uSJPfpT5vGHc0kabYnSdaSJG/W
k+QtPZ8XvaqRJL8QPUg895dJ8rro+0qvg2+AeHbFGvgXSc4bda+ZGPQ1mp+d
JsnpGk+qkuSiLElmaP4Mydmu8TU9f6p3E5qmu6VQQ/vuEN2i+ZagTxO9QnKu
0rg7T5K5RZI8W0uSORpP0ficng+k1yz9/67GvxfPHdpvvdZernVPaL8XNf+4
xrmp9d0nnp11fxfy2Wdn0EsbtgPfukAyO6TXfI1btc+Leh5p8Z4Pied2vesr
uV8S3Ufj1Rr/pm6eSdiCPUSv1bevFX29eK6pm69da9trpuHnGyaGTX4sHbpE
Hyf7D9CaCzW3WLr/ZUeSvKO5QR3W5WviWah1x7R5P/YaVnr+Yu25VM9ovbuw
NP+C2OubGq/Ts1hrb26a7tH80eL/oeb+SPZbW/N37dD/N0qfa0V/QbIGiecl
/Ecy14heiKzStrih7v3W6P9XRN+jcULp+Ys0fj/Ofq3Gm+rWCf17Nf6Hnqel
wxLt/aHoafre3Rr36HlV33yF5O4SvUT897ea53aN4yvzvCX+/qIHSO7/6bxe
1vhzPUdL5krt9zPRKzQu1zNWsr4q3p6690D+G6nlHa+1vZX3ukf0H+sbB4lv
n+gNmms2vX5Bm2nOpk1jTU+v1r9a91lyjtjg5dChRzZMm96Pde2xtr/GTXp3
pZ4Jei5q2L/xMWyKrNFN+8O+VsfKq+En2I3vQv+vpB4vk2/36Bs3a36Rxk11
08Tyk4X9nzgY27RuS1u9BzJXary3zbGDvb8l/lzj9YX9emv4/8Opx7+V/Cf0
7rDm92luY937sRf4cEjzn048Hg56puTtr/kMj9f4TPhVb2l6pOR0NS0LOas1
P0PvZ2l8S2fxuOia9nxJz1Hi2Vb43DYGLh3S+g36/2n0Eu8/1v1N7Vq7UfMn
aX5K6VhYrbn7Uvv+i5ob0PBZHy2+sfKB+fr/qMJ6QaPn8y0+K/DogN4N1bvf
FY7vRZpfrPFhyZ0m3q9L5i2au1XPbsn8ls7mMq1bltoX8An2RvaNIT+PGCfW
8VF87W7J+47WniF7ZZl9BF8B144Xz4WiP6XxD/RujOg+os+smwdfWti0HujA
/6x/D0zMfeZvS5+/E/1r7dsl+uJW4y942KH5rfq/v2S/3Oa92HeU6Hf0bE0s
m2/Z0uLzOadmG36iw3gyUGMj7P8F0Tskc4x4/1r2+aT0XCf+G/Vup/Y+QfQb
uceHa+Z7UHwPiD5Vdu5JPXee5s4rzDNa43atmSV6hfZ5MHd8XCbelaK/JPpM
jedU9hVi/agOz88XPawyzoP3vbn1P05yNog+oO+bRB7T/5P1jYMrx+xVovtp
/TmZ8873xLssDxuknhtVs+3WhQ4LNT+34bX40Yu588AEyXg19H9ZY29mXzis
vW5uM8aCjcTi8Lp14jyQfb50Pk7yRgTP+6L3NoxtzA2P+YOFsfao3L6Kn3Zp
/o7M+WB8aX/Bbzjf5zPvfYPWvV3Yb/9B+r8Q89eKf2DNOI7cOfp/heir4qyg
r2/zGXNet2jtMjCNvNjmfYbGXtQFA+v2v62S36P33yk8rg09BwUPfjUzcx49
X7Jn6rmNfJ35m24LHLuo6f+hyfOzwp+7Nc7Ws77V9OUxz/vuoE/IbLvW0u+7
g/9zmfPhF+U7heinRP9Mem7L7b+vpc6d+PzHM8cR62+TzFbpU9fzGdGfq6zD
OPG0a48HZZfvgp+5fWpGaozA5i8Utjv0uNyxOzXi98taf0DjEMk4pfL8k6Xx
ZnzN8U7tRQ12cu56Y3LNPndIzyXiWyuersxz+OMA7bdKPCcU1rcROs8vHdtg
cE/TNd9yrZ+iuSHiv0tyrqE+I99K398WzsXkZPjvbFiPlQ3TU7VuaMNnQ+1F
DtzUtBzeIXt5i/MJ2E7ckq96G85Z5ME7Gq4bL648v0G6PZb5/TG5c9wFTdcB
5DNqB2rd1eK9GxuKnp7bj6cR603rsES8m/V+c+TmPZnX/jL1WupjctOMynKe
ybxuc6zl/eqQf2nmmB9aOYeRy/45c92Lj5J3t8hWn5EOl+eum6k9yWXUUifW
XAfeqzXj9f845FSmmcP2d7fZbptD/01hO86WWpoz2ti0H44sLfMXqXk3hs2v
0N6DNf+/4KH439TzSOKahnx6VotzKvTB1HkUPP8Ecd/ifI7OI6mJJef6iAfi
4r3CeWxg1Hvk/w+jBvg3vctkg+c1torn0djrU5L7Xen2ROW+YlV8011hW+zf
yTfpmd1mX+usuabAv3rCPxN917t6/2XpkoTfH/H51Hizt3BtRc3do7UtpTHz
cOEal1r3z2XnEzus5080X+aOfTAArAPn+B+f2RR54c2oVYgb5p9q2DfADjBk
W+Xz2hzzX5PMbdhQ687WmlRyn01dayCTMxrc4W85KJ5OjW/reVrfMD51zXCT
ZJyYu668NbVPcV6cIbU+39IVeYh8RG7Ex37UcO9wQukad0z0UuQXbESOgf6z
0n5xZvjG9jhf8I8a8644l7aohYm1EeI9VjLntRrvqSHA/KdSx0cu2e8Xxvbd
hXME306OAwex5emVczk5/STpcGzuc5ypuQXxLeTzut59oPnJmpvXZnvyvf0a
Pl/iiFr6R0FTF+I/32hzjmfPpDRuIgebgXP4EthFTiW3UsPT4y6Keeqrm6Oe
A+f5fr799sqxeWlqLOXd6dpicqtpeMBp9mLP/8n8veSB7tS4+7vcZ48cak70
Re/ZUduuj/q2iFqPvECdQI4m79NrnBY9y2cbrkvBhL25aWrVd0QP19pbc8cM
30XM0VeBM/QV4BR4RT4l9yOfGuGV0r3QY6nzLTxgMlg9NrCXeFwemL8qdY4g
V/RErULNhJ8S/8R+LWzI99Nn3xC99pG+OfIXvkM8gwkf1QqvSZf9WndHm7EO
f2ceH+iq2WdYA87vD+w7uXTfPbh0H8Q+xMKTme8CJukMn9G7VtH/Wlrf90Pn
H1TGyhsz99D4AOe4JbefD0n9jUd8o8V18sLwE3Qkd6PnbyKPk89PrXyvMTf3
uoUhk/pjSnzXusz7L4sznBpnSl1JbQpm4Bf0sOQ97ngY8bf/KoxXL+hbns6c
j6drz29ET0RvtKGyvvRGE6PXBVPA475N+xj+QZ9GvLe3e48dgcedEVP4Q3fY
n14MP2We2JkYPtapvdqlw3Ol5TFPDqR2Zi9wBxnzQs760vcz60rXABMih26K
bz8SP6Ebcr5YukegV5hW2RenaLyn8r3JtMx99TFx7mDqiMBVMGtYYB1+fEHE
74OV8XdRZn+fED7/UOW+aHHm3mhk9EfEH3GIHcmVI5r2c+wETV9MvuyMfS+I
WpG96lHDUNNgu87gJ0/ODHnkc/oXMO2Myn5wmsZ5uesNemgwD+zjW4c3PI99
yH3Ms/b1ODuwhT3Hxr5H1ob8caV9/Sul72zoPcCZYyv3nn3pQ/XuXPF0aNxV
uL/rLHwPwL0AdxDkGTCJeuDxeLdR46my3Xla+3Gt3Sa+NXqG6Nmt/08FL7jT
yB3Pm3P33LdFPzMu6qLvEx/StU+L7fntwrrOrpwTFkdeQHbfFvNdV7OPcY59
Yv6nrK05VsnRjTgXbLJdevTX3mdVjlVi9onccXxxxDW9LjVSXfrsTR3D+7Wu
UbnWmiX+lsJ7tBbGoylRy+3PrdMBjYdTn/fB0rjYGth4r979iXj+MzW+Ek/g
IVhF/44e6wrnq/WFbY+/DIgYuSZozn1n+OIDpePzBxpXUqNo7aTCObR/9K2r
orZlrxbp8J50Ht9hP8G/iCN6EmwxJjO+fhDz9xbGJe7YsD9n/O+J75J3hT7U
RtRITY2fjr7lusI6tgfOPJdaN3S8Muoj8iP1E2c8MDN+jIqceFXqWo27hM7w
yVGF6znquncL33OROycFnu8OX5kaeQaMPZS5BqMWeyh1zvqh1n0PnKE+qHxf
TDxeIt7pmbEFvJlRuoaYrnFe3Clfq/GB1Ha7szL2gDv47eS4B3k9t+05A+RS
n+aR34n1K+Ncfl65/v1v8d+v569Er9X4+fCT0bnjoDfy+vLK91CP4o/EneZX
5fZL/PNYzl3PctH9C/suPvx+6rstcs8jmet9sAsM2xpYRux8PTXu98ndB6+P
uPhJ6jPlbD9WWrdz6R1rxsiJ0atNjhqS+nHY79mFkfi+qea7msejv9kfPc4r
mesl6i9id3/0ZWDb6+Hn+Ct+W8sdW8QFmLwzeMDAM0vXpXu4S4w+gn7i6qhR
0fOj/Ao/vRN2+6n4H81d2z2W+3178MwJrCDPd6bOEbeKPjv12fdU9u/e6IMG
N4zR9CaXR0xzR0EfT41BLQTvjqgn0X9H5JcREdfQYAR2xt7osjO+cUxqO7Tl
xhVsTt5Jok/C77HfgbAhMXsw8HFPbjtjb/TDB4lBcJrfVKjzfhXn+muNvwnb
/RZ/1HdewP1A6ftB7kw+JjnNhn8HYm9yFL0wOEVd0BU1w/MRs62Va4oroh6m
n7w9+lBiiZg6P3NNNzry+964q9wdfQ556BB3Y3FXPrLyXQC96p3cLWXO6eT2
nui7yP83V+6D5mc+M85uYeYenr6rO3d/fSDqzOkR+6tK997k7K7Sdx/Y6urI
c+SeLRFD+DpxhH8c8ZPM9030mmXm37ro07iDxH/BT2qDYal1Q0dijxhs17oF
meOIuhVMBz8nF44nahz2Pbnwbz9/UfnOiP5mauW7SO4kl0jGH2buF27JrS86
ouvI38OATZnrle0aF0V/QZ9BH0y+w5cmVq5FPkj9mxx1wRzRu0TPAbc1Tqjc
t7yX+r6HnEiObqnc89L70j+9FFg9JPJ6n6ghi7gro76kzny2dG9MPctva9TB
1MPdhfMe+uBv+CH8nMtH99HgMf0YuXdW6jhYE/lrB3fZ3Bml/r5PRo2/JPe9
xDcr54pRDePN4dL0IXJ64XvNLal9gfgh1/w4MJ/Y4qwGB72v9N3Zhxr7clfJ
vSo4U9jm2B6MIefSr7H/TYGT9Nvk7n9JfZ8Fzq4JjF8Wffe5kR/P0Xhh3C3w
u8Se0jFND8d9JfeWZxW+050beIjunw3905DJPHfY5B1yFrkHmr4S/OZ3F76/
PepkYnJoYfnDw0/5brAFG8E7tPRvNvQpX437EnIi+p+dGVv6aX5pbj+YLTkr
CudH8uQvK//28CvNXZHa508pjD3NOHfwc0XE1D8VvrPi90n6TPrKRuk6i3oL
u8wMDGLN0riz5TefI79pB8/qNGTHbw794i4CnkbsS39DPQT28VsCvd5l1PCl
3yMDfGyEnS8JnZmbHPqQJ7BZv6gN/h+vAD6F
         "]], PolygonBox[CompressedData["
1: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
GPz/AdJKfN4=
         "]], PolygonBox[CompressedData["
1:eJwtz80qBGAUxvHjM8wMZmGMj8QViJSPqMEOSWPBlLGwsSMLV6BIYcXCWklT
krkW2bMxmVzC4DfNLP6d5z3nec/7vBMHx/mj1ogYQAd6eiIW2yPOEhFF7COT
NMd5KqLMdKGW+E75fsyvcYMKzxcy5ht8szwpOokZek0vTe/wHrZE3HdH7PEX
UdDbxRzflr2l5tv1DNPmT3pT6rJzDg/Y0Jvk/9T/wFBvRL4zIqtmnSfNTxKN
7PU/vKFfhnc1oZ/EKD2CK/rb/wsyTci4zbdi93ifMy71N2V+4XtFGcPN99J8
GXoQNbraFvFnXsMvlu1/lqXL3i+eSm/j7XqGO6ya3arrGKMf61l4qlhwdx65
5o4l9R/SljAp
         "]]}]}, 
     {RGBColor[0.8663842721481576, 0.8815969516575726, 0.8675496270543178], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
H10k+/Sf+1YdKC+Jx/8FnWXs+Q==
         "]], PolygonBox[CompressedData["
1:eJwtmHmQVeURxe8w7w28u7wHEdHIjAquIEQIKAFklWExSAKyCCMOO4yALAEk
igJKoQRLDVqymCgGMBLjBlIRlyQiQQhGhDClCYwmKCiLAWRVAfM7de4fp173
7f7627vP9xqNmNTvzlpBEDQpCoIMv6dzQbCGDy8UB8EbcRDsyQfBf8F5oL5+
oyB4AvtJUB+5KT4raLgSXIO8OgyCwbRtiT4+CYIqsChLfPRdtO+gGNjrghH4
TsK+BHs1eBa5LWiA7SzxB2BvjT4c24SSIOiLfpo+GmLfgr0MvT16O9ABdAQ9
8Z+C/134j8T+Lf19AzohdwYL8PmIsXwMFiK3wDYC389pM5m592NOfcHFhSC4
BEzlWzlrsw/7S8Qej62MderNGCYgvwNuJ9YYMI74dfEpgJ587wUeBB2wDQTl
2GfT53bkHWAu8lriv0b8BoyhmnbP4r8cLOT7w6ArPl3Al4xzP5iBzzNaK/Au
8YaCHGOZT7wS/I7FXpsm2E8iNyDWd9hHYt+C/DTtBxZ7P55BHpezvQL9Lex3
oJ9FvwX9JfTPwWdgGBiutSHmOs2H+D3o+15irEL+PXgffTtYTPv38ZmHrRT/
pchD+PYI7Y8xh6fwfZVvvbBtwOd79EbywV6C3h39YtajBvks/jewPsu1p+jT
Eu/HRPynI19Lm7Psxw7m3AK5AXvWl7a98M9jv0R7CRqCUrCSPg/R9jrtOXNd
FnovNeah+F9I+wvA1aAJqMJ/HMgil4Ar8BlA7NG070nb6djmM55FxJyBfH/s
vX0On63Ya9FnEbiVtoPBGOZzN/Y59PcO9qboTdI7prtWmo5V32RrD6aXeI+0
V3WxHUfuTPyzum/oz6d9qK/m9NEMbNY5ABMY75P4Pk6MNfQ3NfH6T2YMn+qs
EfMz1q4t9uPYLip4LR+hj4bIfULf9RO1g+AvjKUx+oe1PIZB2D+m/QPou8EV
6BPRr2Y9ivBfgv98xlBNXxX0eT72sfTxa+Qy+luPbyU+P9FeEu9NYjdnTGHG
Z+zntB0U+WzojCzDf0Pos6A7oLugO6a79lPQG3Qp+PwrR3RVf5HP+j/xH0D7
dZHvou7kbvoeTh9/VV/YD6NPJuZS5CLwDf6rYs8lAIu1Rznnv0nYu+v88W0X
fe3hW/swzZHgFvruD4Yo/7Eec/GvQG5DvD9knE9eRH+P8YxArwEf0e5nfKtE
LiPm+NBnRmcng1828pnS2dKd091LCr5bumNlxK6KfL9ln4W9B+OtF/h8dsJ3
eOixKwcqF17Dt6bpmdHZ2YJ/BXOZgE9X2h/PO7dojJuJXRnaphymXDYGn0HF
3tNxyI01hmKv4ZTEOUq56h78T9G+mng7QW1QR/PlWx+wHXkH+FWanyfT5ij6
sJzvdzl6NnGOUq5aRx97Q+do5WrFUKwMPt3wnQiO6G6FbqtvxbJpTEXWyzVe
0EggRuOCc6xyrXKGckeUOJcop1yg8TGeBaqR2NaCh0BHxrMJTIq9R9qrr/D9
HxiI7xJsL9J+CvrD+Pwr4zlqrsqxyrVnmE8Vvv+JfDd1R5Ur5/BtNtiE/B74
mjZfYB9EvEboh9E317J+KXpN3uPRGddZP4C9NOv7o1w7g1gHkAPwZuyaq9qr
Ozgr8h3XXc/rPqJPxGdjxvNXbp1O+/06W3w7LTvtF6OfQv8K28uJ77J8Xklc
83X/poK9+PdnP84w3kvpYyW2faBnxnded/9U3udP35ZFrpmai+aktX4bfS7y
g6A2Y9ufM9cYDNar3sYeexnxVxBrlHJe1pxA3ODHYFjW+VS1sYNyRLHncCe2
PxNvD+djBPqnGj8+/wa/4ftvwanYtVU5Js/3c7FzsXJiP+THc64Pqo9XJYZk
5bNF2BomzjWV+B9V7ab/OgXXGNWaZtiHZD2nacT/HW1mFjlHbcV2OT5tM75j
l8WuYaplNejHiXc0zZ9awyPIs2mzOmtO9jz2+xLXauWIleiLIuePabQ5gFyb
byWgF2O6Ka15qn3tQHsQgwi0Aq0LXhOtzaO0fQy8EXkvTtD/DOSnxIPQK+nj
5dBrpLXSGl2pWpAzF9B5V20qLTifiDPegX4I+0r8n2COFXmv4br0vDQj9iG+
Hcybs4m7zYzNPb6lzV3IpxQf+UnaD8VvbehYqomqjbqjuqvn+P492EmbhbWc
o6uRX488duWgPyH30HnA/rruWOw1aJXmUOVS5TDlshvx6wZuyzv36Yy9Fpoz
6Txo/uISqsmqzeIEJyJz2A4p5xP3Wxd67OLI4so/xGdVsWvsBOa2NXLuWMGY
/q7+8Hkg6xqlWtWSb3HGHFdctw2oKnFNmi6+gF6J/jb+LemvTuy7pT7U19TY
tUMcZwpyq7y5j/bwstA5SLlHOeho7BwkXTnqSGxOK26renF9wXdSd1Oc4KHY
NVW1VZzsOd0l9JklfiN8Qts+Kd9X/JvF8fPm9uLg4uIHI59dneE88U8k5jI6
M8eQp+adex/F3hH7PyJzddXEAvqNiWuF9ldccl/kXKX7oVqqGq1aLc45jfX8
Y+K3gs7UC8j3xq7V4uCzkJcn5ho6w6qNXxKjFfE20v6LyDVZtVmcfxz6ppTP
qb24fHVkbqv+zuX95lD/Oo8tGW+PxLVR+6u32Jl0fzSf75BHJ+Zu6n8V8Xag
j8V/NfFeYfz9Y59dneGQeFcVHFtn/krkX6iepPl2gThl7FqrnFikuSZ+64mT
lyJ3Sby3yjedkU+qfoDdtK0R5w69d9rDxVFag7Pm+E1Dv0n0NtEaHUjfPHr7
1GUs9dKarNrcDZSDgZG5pjjnLvzmMaadGee4baFrpGrl3djuAb1pc7jY5zuH
fU7ivVANnot8K9+mcD7G0L5d4jeH3h6KqdhR6La6Iz8i7u3pe0t71gnfUXx7
usR3THdtG9/q6vyBTfiOzJvry2d03n2oL+3J4NA1QLVANfFr5A+IMTZjDnhb
aE4rbqscp1ynHKVcdS3zalFwjlWu1Z3W3f4k9NtdNVK1MkzHrzWYh29V6Ph6
s+rtOjgxN1XOWIqtO3MuV10h1t6Uo4mrqSaoNugNrre4OO+R0BxIXEhvbL21
VdNV2/WGf0zcIfJc1Kf6PphzrlJN7kXf/ULXWr3x9dZvl/d/A3rz3JD3GdBZ
EOcS9/ol8a7L+M2it8v1if8rGCUOk/iNr7e+aqpqa5vENr1p9bYNYt+FespJ
ukuxuZvy21JiX5Q31xHnuRB5Y2JuX8y3v+ntnbOsMWgs4kDiQuJU4lbnFZxr
xDF/gPxh4r50JnQ2KkKvvdZDe603jbiZONr+2DVftV+cUdxRbxC9RfQfi/5r
0RtKbylxhOaJ/8PQfxnKmZ3yztGai+7wtNhvLL21VINVi1UTVRvFgVrRvnX6
PtCYNojTYj+ZMedYg7yNmB/kzUHFRfVGqUnP57uROZ+4n9q8GvvM6+yLo9wn
bs94by6Y84v7KyfsTjmVuNX5jKF+4je33t5vxeam+g9qPfL/AfPGaYM=
         "]], PolygonBox[CompressedData["
1:eJwtkb0vQ2EUh0/obeLe616fQdJKatKl7SZaJm2jFSQ0EgnxMdN28B8IBgML
IhFhw2YziwGrCG0QtCJISCRlEOF5czs8Oe89v98555739U1nhtIVItIKGnhN
kU2XyGiViGGLmPBkiRThHe2jUkQ3RHKQxrehi/yhCb47Yh1NbvGFIQJT+Cbh
AbL4P/F4IOVmJtFXLdIGWfQMNFOzhu8YbZXvFXiFOXIvRD9z2qFed3p48Z1D
grm19LGhBrbo80zNNjGHnocYdVGYIXeCFuechARo9Oujn4avhe8bLqWDXAO9
GmGc+xiDErV+Zn0TQ/iC8ItvHn+A8yP/uMz5Hm+BcxF+1HxyQXw7fO9CgNwE
8zrJ9VM3AE3l3ZeYV0L/gijeHhhBO0K7KO+idrouv8GV4dy/eod1+s2SuyTn
spyd3JZzt+qOF6EbfcFw9lF7RagNQ9503q+LcwqGwaJ2kB428Qz9FN7Ag6+g
/kG9If0O6LcH+9CLfkguSYxBHP4Bd7JNxA==
         "]]}]}, 
     {RGBColor[0.941176, 0.906538, 0.834043], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlVuIV1UUxveYf2ef8/+fgUwidDRnHMeY1BltvD5YouY85MBERYUD5QVm
1BmbMq1IUfEWJIqgD4LhlcCHzAu9dJFKjJqHLg8+6FSi0sWaUgk0iOr3+e2H
zbf2Omt9a+21116nbsnqJ3uHhBAOsu5hTSuFcBpFbQzhH9Yu9n+AD1esbwJn
FyEMxfjZPIT3yiHUVYWwIgvha/Rb0H8DXsWnF98GcDz7QXwXYr+O/fNDQ1gL
zoi2nx79TTYd8Hew34S+Ffw7c9yX4GgmVhnfecirkCchrwTP1pizHY6xyI3E
/ROeMdGcO8jvIvIh5Kl8mxrNqbN+in8tsbrxfRPeJni60Q3D/0XkTvT3sb+D
zUK+n0m5jcD3W/absQnYPkOe3yOukW+w3Int26wu4m+pcgzFOodNU7S8CpwJ
z1L4poMNOi+cvdi3IL9bHcJkcE80p7i7Eo9y13l0rpbo2LKZCM+56PpM4fvO
6DyngWfw3QvJYuq0u+zcDsB/PTPPl+g2Vlmv3LWX/n7w12Qvvw/Lrrlq35iZ
cwI4jlq8g74BrMd/JfGvgJdZy5EnYTMKuQP5AlgDzy3Ocrviuqv+P4EtJcvr
sVlUcU3awb3sDyDvU0+yvkA+EV0v2RyJ7gmdfQ657cDngvTINzn7ALFGqc4l
99Jq7K8F3++rkvHtQ38FXIdvP/Jr4G7WAPJReLpSnuqXvopzeLniWivu7/C8
Ht0/b4AFZ36C+tSAg+lN6W39DM8r2PwCrkk84hufWdb5FE9xnyL3gD6Hpwp8
Lvcb1FscZH+MO+pBXlD43c0v3HO6r254viLGMnj6wfnRNR+J30PR+g1gc3Q+
b0X3hHwvlV071XA7uZ2NzucT8GPWvfB8FP1OdN7z2L+P73Dy/K7wN9k0yiZz
3G3YVOeuSYR7E3bHyXmj6ln4fuuJtSvNCs2M+sz3pXt7rHBfzQXP554hmj2/
aZ6gvw62llyTOuQbFc8EzYbHo+96HHyLo+/xA/CFlKfO1J15pmm2bSibX3GO
5b675cR6oOT6z8S+r8bvTjOgrTDPMmxvlz0rPkduSbNLM0zzSHNpNPadhXPe
n9tO9mvRnaw4f91tP/uMWh3OfB7p28CT0f15DYx8exCbavC/aPt/weGp5rrz
2sLvbnTh9ya97uSRwjzq9/WpJqrN07nf7KzC9VLd9FYGg+szAZu/Uj+rr0ek
Oal52ZbmuWb/o9HvTv+ZpbnrozrdSu9R73JsyTOtR3fItxOar+gXpF7VOU6l
814CT5HrHeTT4I/R87MZm/boOqtfWtOs1szuSfNWc3dKZnv5/ZD6WX09Men1
vS3VeaTmTOoHnbsp/Qf1X1qR9DMK35lifZb7nDrXQPTdKGflvjV6tkyO/jeo
Zwh3d7be/TfB8T+FI/B+
         "]], PolygonBox[CompressedData["
1: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
sXcxx8317eitkJ/yflXRg9uLW7OsXf8DSYWoRQ==
         "]], PolygonBox[CompressedData["
1:eJwllFtIlFEUhbc22pkZ5xdNiHK8TDlqZSVYUXSxCJuKEq1ekqAUIyVT1CIL
MiO1G2UEERQFmRL4UqEV1FtGUWIPQUI0FklFZhedRHvp8p32w2LOWmftdfbs
c2YCZTVbqqNFJB/EgMI4kW6XSIZbZI4R2eMRcflEXrDOANWYCuB9XpFyfNlo
ITAdfhlvM/sj8G4wO16kjryn+ILknUdLgGeAa2jDnFeGdoTaVGrjWc/EF5ki
4qD5qb+J9h20kduJ5yq1vfB2kIk2Cl+JbwyeRe3FWJEefOUggZxd6B/BBnpe
C7ycW2h7A6OOyD60TgawiKyI/X4+7cf2tQQ0k9EIv0JeDvwrmE9GFdpBsBOe
C66T8YXzP6PVs7/Q6J71vCQzkb5i2H+PthyeDMJk58NngB+O6nZ/KXCxt92j
c7XzzQKBKJFKMnb7dB7jaMtAP74Q2i9q1sGDYIy8emZzm/Uto3ewHz5B3hl4
EvXH8E/CH3l0XYz+0/ZMVqtX76HA9oM3TN4a9L2sZ6HdBU3k5aEH6CkFfGMG
68kaoraW81rwLMD/jr2N3JGHTwdsYhZT8T1gncba8HkCbyKefmqPsq4Cfs6v
wDfJGavgQ0bPX00fPfZM1vfQ5nJWBXVvQAUzagLH0QfhT0Ap+4fglMgzsn6D
IvgAKCbDT94A2inqJuy80JrRRqg9Da80mjsMP8t3fmjvEHTZGeLb4ei7y3Tr
bO2Mt9J3Ouuw0XuOwDeDNPgBo3eVhO+TV/vPJavVvlV4DpmD9HoB/tq+N7hx
dG4+Oyt6eQVvoZf77KdSO0DGSfg2zgizfmu/P1jMTHPQL9l52t8ldzQP3gD6
8N2xb43MEL4Un84j2ajf1o2wl4fWaPT3/pz+ovGWwqPY89DTDT6L4/T+U9E7
QBG8FG+JfQNG38MHeJD+psFrjP4Wc9EK0UpYt6Gds2+T/HYy3WT/NXrW/zPJ
7GL9x+heH/2OM4cV8MNG7zkWTx1atlv/z+wca+GPvfqe0hEb8PbC/wFNZZxr

         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV00dsj2EcwPGXWC1ao3atVoldq0apmm2N2puDFWorUQeExA5Jz8bBOohE
UC4cRIkZO/aMvXc0ts9z+Pb7m8/z/v99/42nzB8+r1QURRP8GRsbRd0qR9E4
TudrOBCjWSmKroqv4DJO66+oGEXL0UQvGUlYqLcAP+y0kLdEK9RXS8SfuCgq
4GL7S/gklzjjOybqHZb3iI+ieXpz8d45B+0X4RB2yUvr7+QL+pPVPtqrJ/5s
9wtGoJOZkbxbr9DMY/2uGKWWxl1wTK8zz3LWfvfncS2+gPN4K8/Rn2Ynm6dy
hp3ZenOwVZ7sni08Sf8qr+abZrLUl7q3AB3U2qOmnXN449wCfoWXWKm3CpvN
bsJGfA5nqFXXT8BgZyc4M5eP6x1TWxe+D/F6XoO1qGGmtb1WWGxmtLsWmslH
ht4l+9W5Go7q9TXXD2XwyUwfbmsvFSlmf6vVNVsPF+XT9fdwonyWOA/3zDw3
/yJ8h1imNpMPO7+zuSK+oZYmXukZe4kzUWJvS9jj1jxUbxiynJ+in80d9JJ5
tN0kHsPn1E6bnyQvZ/6b/Kz8DG6JT/Kp8Cz6J3gmX+R4u6WQ5Xl6clW7+eGd
xWIswgZzD5xxhO/z2nCP+RK9OHEDZ2Xa7YXemCHP1Rsc3kM0svOJtyNbfxvf
Vbtl9w4itRv8V22Rc9vL88P75/O2E6eZb8ZN8Uj9idlnmIwvdh7zV84J56M/
nstj1UfZOSsexDGeayBX5DZqueFeroDyagPkZcVlsMBuMY9Xq+W87+IHavew
3TMU8uvwe0CcmX32K3N9s5W4I1qG9y78b9Se2n/DxT7TeDu35Xu5NMaFe/mD
2j/npMrb4I57mvBtTgnfg14druGM2tw83GcnEUlqSfJ+6B/eQ3fNRU1xnN4E
Pm+uijjHXYPwTj6cG+oN4WvyvnydR9qNVU915y/5DvVNnqOq2kYukv9Uz9SP
UcszX47T0R0P5UOCzaSLM9Abr+UN7SaihfgJEsJ9ZuP5P9Exr3c=
         "]], LineBox[{3791, 2432, 3783, 2427}]},
       "2.5`"],
      Annotation[#, 2.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV02lsjWkYh/G3aC0ttcU6mvQLKihBGjViG3sQptbWOpaGmopMJcQSVBAJ
sURtsSS1jCW2iK0khIQQIkGMfY9tKFXTCcrv+XD1eu7/fd/Pe87pOckTcof8
GRNFUYY/JdWi6DOeV42iwoQo2oWCGlG0kzfwdPmS6lGUww3jo6iKvDLO2HmI
BzilLtM/yUU4jVnqMvN5fMj+QZw2O9adxbK5ejtkuTgmHy3/T75PvR8znNvI
2pqbyJPwB86ZncyHuVTvCOeYP8qZ8nf2StSl+Izt6tnmtvFF9QV0Mptq9gMX
YzDay4dwB36Es+ZjvI8KeClfYP4FF7krW6+T+lekY4K8MxfJH9rt6twFK+wu
x3j9XvKn+lm8UT2SMzEKi7FXL8/dafZm8SmcxGv5NP2/w47envBa1Nc5390P
nOPQQl2RUziWx9k7bv8EDslG2T3Im8O9elPMrJNl8+TwOWFoyMNn5bwVjdxf
aGe+81Wex1d4kXwhFmCsurv8st1iux/RGi2xRtZMby1v9qym4TO2U47vqGmm
i2yMO+ao52IepqoHyqfxIM7ia2Yz+Ty3d99Xc99QO3zXkIfd8o36M5xzscy5
p52lvARZ+qXyLyhBE70yfuYZBfq/qBPUjfkjJ3vNn3gr/nG+Y6ZA74fzes6w
dzt8x/mvgPsPcJr5DriFm0gwsw6P9Z/xODzBI8w0v1rez1xPPHf3e66ql49q
njOG28pa6XVUD0h0r3NlxKn7qmM5Tp1rtoHZelgafgey+7K72OI5q/hN+N9g
r52V4X2bHakX7552aIGWuCR/i9fYpD/c7OgwG3axBzEYYbYS/+tZ5eG3pf7O
5bJ79obxOa/lld00eV3n+maao446yV6yLFn9G3LMPUUDeSPUR7x+ddRCIvq4
sz/e6g3mJHsD+Ya6Bw+z35vbub8bp/J2XuH11DS7nI+o/w+/Vb0qsmw7sZyO
u+G3hXR0Rje8MptkpzFSnJ+gDn43X4Pz3fkTnti42A==
         "]], LineBox[{2426, 3782, 2431, 3790}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], 
        LineBox[{2367, 3725, 2697, 2810, 2699, 3756, 2698, 2873, 2370, 3728, 
         2702, 2811, 2704, 3757, 2703, 2875, 2372, 3730, 2706, 2812, 2708, 
         3758, 2707}], LineBox[CompressedData["
1:eJwV03loz3Ecx/HPUI5tbnMlljlKufKHFUuOyRXGjoRp2iay8Z8okVLK+Yf7
irE5Ysg5YeY+k0TOSLly/OHINfP4/PH8vd7v1/v4fj/f7/eXWlCaVZIQQhjl
p3tSCD3wKzGEvckh7EEZTjYJYXrTENrwT4u3iEsbh/BXXkI3y5/xS+RzUWNH
Lf8i/Ucv0cP0n111qI0qL8IJtUK6wY7j4m54LR8hz8RqvWuwFpddo5h3hc6i
1foS9V+gPV33PM5hjrwdHaTvurkbuInhZoZhl/pV+TX8wk/sxwHkmBmoJ5em
0x96f/O/05lYYG8BXa/2VM83+Vfs4M1wL/nYqXZT/t5cb4zXt513kFco3isu
ohPQR70f+qJY/ZBd+8QVKMcpPX94v7EnnlPeA7Plr+R5ejbJs2luvH/cjedR
O+k6p7ANR9xXJd7FGXmFmVxaTkvpPCxTf2a2Hrrz6+QJ4oD8uM81U3ld0Dm+
Uz1feJ/jd6H+VF+lPWX8nHhd+XYUqhdhN3+RuV10Jn8RFuKY2cX8Xnqui6/E
nXrS7OiGM3qq4j2Jz9L+8dtQr6Jp8t20a3zOdqTym5mfbs8g3pT4jvgZ4sGo
4deXN4jPQm0F7y1dYscGc/nI1LOR31zPZH42JslL5LfpI5ps5j5NoslmHooT
6Xp04BXQMbyxGGdmbPyG7R0pH45P+IjnvAd6X9BldBr68+fL25vpgHZoG78R
fiO779E36vP1thEvV9vBfxHPLV9HU+Qf6SesQkf+SppnLsF56uEW7048E7by
l6pvplPleeKBdtSnWbwKOpEGWodaPJFn0+r4DM2k0NZmOtrdknaRD43azP8O
c/S8Qnv1FvwU2kRPEgbIR9vVSvzQ3nLxB/UJtJPZcfSefCjNtiMzPiczQ2gZ
MrATq81W0qP4qT9DT0PzxfGd03Q8jt850jEkPj8zjeIZ9HeK7w89xS/jOZBl
Jjn+P/T9B13ssVg=
         "]], LineBox[{2425, 3781, 2430, 3789}]},
       "1.5`"],
      Annotation[#, 1.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV1Hlsz3ccx/EvIuhckyXmH+cSOhGRqaNzH3+oW/3hSjZd4791ic5Rt7rq
bBwVJM4oQw0bLZuuFWIhxkqG8YdtWveRdWKuPzzefzz7er/e1/fo5/trl/XN
uJw6SZJM8OcszW+SJL+nJEk1fmyaJHfpkUZJ8hM9xp+i27E+4AerpX+QJFfp
Grl1cgPEozBO/NS+Z9iGTH6tnkI6UL2XuSq6Qm61XF/xSIwWj8GTuBd+Kx3L
F+hbQ/vJ9TS7jD/EL6ev8BpLsBRX9OTTVep9xCOwiD/IL6aX+YV0Jf+5eDjm
8wf4BfQ3fh4t4NPFGZjDf8fPpZf4PLqC7y0ehv/52djkfouwGWnxbpCn73rU
6Q36J34Q36QbGyfJBhThvD075DeJH5i/j1N8jXyteA8G8oPwt/gf5Iq/RbW4
BvfwKJ6dPqaL1a7SGXQWZiIfGeq/uE4FyvHGNSrpYfpO7R19S9/S7Hh+z/GM
NtXznM7l14sf2n2ObyI+S1Pl0+XK+H/5UlpLT9KSeE92vqAv6X90KqabycUt
c3Pc27x4z6iV+1l9ndlCNMOn5o6rpcl3Fo8wk4N9cl/TKjPl8T8VZyBVTyek
mv0+ng/ZfE68Z33l4tP4RG9HuQ/Nt8AwvjvfI66FMr0pZktpR/VW4vHir8TZ
2KV/qj07aRa9QPPosTgrcd96fhXXFz9Va29nB5TqKcNJDJbfLTeEtsU1vW3i
bNPJZivsqMRhuaP6SuL88GfUWol3yX1Mp8gNldvIF/GVyLW/Ip7Jrs/QFSnq
jVAl7oT7ZvbTL/V+gSy1QrkT8c7R0nwbuQb2N0Rd/qL+evFNxf9fT758nfg2
aQkWYSEmI9Ouj/SdVp9IJ8VzxXtU26JWI76H6nhuu1qjW/xe6L8jdzfOQJw3
2pz+FedXzwSaxrcQ/2FPsX03aGZcU20ovcbvpd309ad70Bc7sFbtKO0Qufh2
6DRzxfL1mvmtwk3+NnqhP5apNXC9Arpdfzt0MdvZ/d6Jc4Sx5hrH96bnPYC9
w5Y=
         "]], LineBox[{2424, 3780, 2429, 3788}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[{2423, 3779, 2428, 3787}], 
        LineBox[CompressedData["
1:eJwV0TtI1XEYh/E3iuBkWRCuUVEumoOKNbQ1ZB3ztggNYVZDZpl2XQqim6AO
KuoxA7uA2mXoJjiU6GBGFwyO3SQoHSuohhqa+vyHh+d939/3fc/hnA0NzbXH
lkTEA1xIReTkRlSvjljDeShcEbE+J6KAr/N2pFZFXJXdsVKPA2jAIRxEu0yu
/BPeiCJ1r/yEvZ+YU//i3xhElb4w+Vxea3+TnTru06e4n5/zDKYR7oV8nfly
2Tz9Q3ce4TH2e6vHPvU1+UGswyyWmi+T36IuwoR62J1Zd96iSX9Rptgsoy/h
Sf0P83q8d/MDnpp95Hl8wpjcPffGze8nd3mU7+IO9nrf7F4+vrrTZmeRz8kt
8Bv9qMwt2TGz2/yMh/gmptQ3+B/Oq4+gCY14af8oz/AXzLmVxQv1YfOz6gF7
n93v40zymyJt/tr36eQOtKPZzrvkBqbls8n/jlpvLVzNx7mGi+32cDe60Gq+
0+f94ZMYUZ/gErmtbl3Wn9bv4oz8d3xDub7cexkuqU/JvFKX2tvGV8zOmP3F
HnUldqMCaZTJZfEfsFxjzQ==
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], {}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.657906716224578*^9, 3.657906877669261*^9, {3.6579556689444556`*^9, 
   3.657955684575683*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Inv", "[", "t", "]"}], ",", "t"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.57054840521875*^9, 3.570548416484375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["x", "1"], "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", 
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "1"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "+", 
      RowBox[{"2", " ", "t", " ", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "2"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "2"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.57054840721875*^9, 3.57054844678125*^9}, {
  3.6579045368751497`*^9, 3.657904561835193*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Example", " ", "2"}], " ", ":", " ", 
    RowBox[{"three", " ", "dimensions"}]}], " ", "*)"}], "  ", 
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "3"}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.570537121125*^9, 3.57053712275*^9}, {3.570537205125*^9, 
  3.570537238421875*^9}, {3.6579558364263496`*^9, 3.6579558454119654`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5705371850625*^9, 3.57053723928125*^9}, 
   3.6579027809117603`*^9, 3.6579558881872406`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6579558722596126`*^9, 3.657955882742831*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", 
      RowBox[{"-", "2"}]},
     {"0", "1", "1"},
     {"1", "1", "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6579558775792217`*^9, 3.6579558899032435`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixExp", "[", 
   RowBox[{"A", " ", "t"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.57053714828125*^9, 3.57053721571875*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", "t"]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", "t"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[ExponentialE]", "t"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", "t"], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "t"}]], " ", "t"}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "t"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", "t"], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "t"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         SuperscriptBox["\[ExponentialE]", "t"], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "t"}]], " ", "t"}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "t"}]], " ", "t"}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "t"}]], " ", "t"}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "t"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "t"}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.570537186328125*^9, 3.57053724184375*^9}, 
   3.6579027818633623`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{"A", " ", "t"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "0", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "0", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", "3"], "[", "0", "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.570541121453125*^9, 3.570541158859375*^9}, 
   3.570541216171875*^9, {3.6579030409798174`*^9, 3.6579030739114747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "t", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.570541501578125*^9, 3.5705415294375*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", "t"]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", "t"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["x", "1"], "[", "0", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "t"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", "t"], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["x", "2"], "[", "0", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "t"}]], " ", "t", " ", 
         RowBox[{
          SubscriptBox["x", "3"], "[", "0", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "t"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[ExponentialE]", "t"], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["x", "1"], "[", "0", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "t"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           SuperscriptBox["\[ExponentialE]", "t"], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["x", "2"], "[", "0", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "t"}]], " ", "t", " ", 
         RowBox[{
          SubscriptBox["x", "3"], "[", "0", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "t"}]], " ", "t", " ", 
         RowBox[{
          SubscriptBox["x", "1"], "[", "0", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "t"}]], " ", "t", " ", 
         RowBox[{
          SubscriptBox["x", "2"], "[", "0", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "t"}]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "t"}], ")"}], " ", 
         RowBox[{
          SubscriptBox["x", "3"], "[", "0", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.570541503578125*^9, 3.57054152971875*^9}, 
   3.657902783672965*^9, 3.657902830956648*^9, 3.6579028617043023`*^9, 
   3.6579030757678785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"r", "[", "t", "]"}], ",", "t"}], "]"}], "-", 
     RowBox[{"A", ".", 
      RowBox[{"r", "[", "t", "]"}]}]}], "//", "Simplify"}], ",", 
   RowBox[{"r", "[", "0", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.570537453171875*^9, 3.570537485921875*^9}, {
  3.5705375264375*^9, 3.570537527046875*^9}, {3.570541232796875*^9, 
  3.570541256703125*^9}, {3.57054815515625*^9, 3.570548161890625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5705374594375*^9, 3.57053748634375*^9}, 
   3.5705375280625*^9, 3.57054126159375*^9, 3.5705481625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "r", "]"}], ";", 
  RowBox[{
   RowBox[{"r", "[", "t_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", "t", "]"}], ",", 
     RowBox[{"z", "[", "t", "]"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"Inv", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", "A"}], " ", "t"}], "]"}], ".", 
     RowBox[{"r", "[", "t", "]"}]}], "//", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.5705482433125*^9, 3.57054839365625*^9}, 
   3.5705484436875*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Inv", "[", "t", "]"}], ",", "t"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.57054840521875*^9, 3.570548416484375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SuperscriptBox["\[ExponentialE]", "t"], "-", 
         RowBox[{"4", " ", "t"}]}], ")"}], " ", 
       RowBox[{"x", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "t"], "-", 
         RowBox[{"2", " ", "t"}]}], ")"}], " ", 
       RowBox[{"y", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"z", "[", "t", "]"}]}], "-", 
      RowBox[{"4", " ", "t", " ", 
       RowBox[{"z", "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "t"], " ", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "t", " ", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", "t"], " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "t", " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"2", " ", "t", " ", 
       RowBox[{
        SuperscriptBox["z", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "t"}]]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "t"], "-", 
         RowBox[{"2", " ", "t"}]}], ")"}], " ", 
       RowBox[{"x", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", "t"]}], "-", 
         RowBox[{"2", " ", "t"}]}], ")"}], " ", 
       RowBox[{"y", "[", "t", "]"}]}], "+", 
      RowBox[{"z", "[", "t", "]"}], "-", 
      RowBox[{"2", " ", "t", " ", 
       RowBox[{"z", "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "t"], " ", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"t", " ", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", "t"], " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"t", " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"t", " ", 
       RowBox[{
        SuperscriptBox["z", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"t", " ", 
        RowBox[{"x", "[", "t", "]"}]}], "+", 
       RowBox[{"t", " ", 
        RowBox[{"y", "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", 
        RowBox[{"z", "[", "t", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "+", 
       RowBox[{"y", "[", "t", "]"}], "+", 
       RowBox[{"z", "[", "t", "]"}], "+", 
       RowBox[{"t", " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{"t", " ", 
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.57054840721875*^9, 3.57054844678125*^9}}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.657955965469776*^9}],

Cell[CellGroupData[{

Cell["Invariants of the 1D-harmonic oscillator", "Subtitle",
 CellChangeTimes->{{3.5706495818125*^9, 3.57064959778125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"v", "[", "t", "]"}], "2"], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], 
      SuperscriptBox[
       RowBox[{"x", "[", "t", "]"}], "2"]}]}], ",", "t"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "'"}], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"v", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "'"}], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Omega]", "2"]}], 
      RowBox[{"x", "[", "t", "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.570649615203125*^9, 3.570649728296875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.570649720453125*^9, 3.5706497286875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Tan", "[", 
        RowBox[{"\[Omega]", " ", "t"}], "]"}], "-", 
       RowBox[{"\[Omega]", " ", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/", 
         RowBox[{"v", "[", "t", "]"}]}]}]}], 
      RowBox[{"1", "+", 
       RowBox[{"\[Omega]", " ", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/", 
         RowBox[{"v", "[", "t", "]"}]}], " ", 
        RowBox[{"Tan", "[", 
         RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}]], ",", "t"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"v", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Omega]", "2"]}], 
       RowBox[{"x", "[", "t", "]"}]}]}]}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.570649760234375*^9, 3.57064986309375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.570649833421875*^9, 3.570649863828125*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["An artificial system (Third invariant)", "Subtitle",
 CellChangeTimes->{{3.5706499426875*^9, 3.57064996253125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sol", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], 
         RowBox[{"z", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], 
         RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"x", "[", "t", "]"}], "2"], "-", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], 
         RowBox[{"z", "[", "t", "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], 
         RowBox[{"y", "[", "t", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"x", "[", "t", "]"}], "2"]}]}], ",", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
      RowBox[{
       RowBox[{"z", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Large", ",", "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}], "\n"}], "Input",
 CellChangeTimes->{{3.57069170040625*^9, 3.57069170040625*^9}, {
  3.57069181884375*^9, 3.570691819265625*^9}, {3.57069188175*^9, 
  3.570691928703125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "5.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "5.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "5.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.570691777359375*^9, 3.570691819828125*^9, {3.5706919071875*^9, 
   3.570691929328125*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {Thickness[Large], Line3DBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  LabelStyle->Directive[Large, Bold],
  PlotRange->{{0.6666666302456234, 1.999998554627699}, {0.6666671644721168, 
   1.9999999999999585`}, {0.6666668226292549, 2.000000182054899}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.570691777359375*^9, 3.570691819828125*^9, {3.5706919071875*^9, 
   3.570691929390625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checking the non obvious third invariant :", "Subsubtitle",
 CellChangeTimes->{
  3.570691757875*^9, {3.570691975515625*^9, 3.57069197971875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["I1", "2"], "-", 
             RowBox[{"2", "I2"}]}], ")"}], "-", 
           RowBox[{"I1", " ", 
            RowBox[{"x", "[", "t", "]"}]}]}], ")"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"t", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["I1", "2"], "-", 
             RowBox[{"2", "I2"}]}]]}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"z", "[", "t", "]"}], "-", 
           RowBox[{"y", "[", "t", "]"}]}], ")"}], 
         SqrtBox[
          RowBox[{
           SuperscriptBox["I1", "2"], "-", 
           RowBox[{"2", "I2"}]}]], 
         RowBox[{"Sin", "[", 
          RowBox[{"t", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["I1", "2"], "-", 
             RowBox[{"2", "I2"}]}]]}], "]"}]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"z", "[", "t", "]"}], "-", 
           RowBox[{"y", "[", "t", "]"}]}], ")"}], 
         SqrtBox[
          RowBox[{
           SuperscriptBox["I1", "2"], "-", 
           RowBox[{"2", "I2"}]}]], 
         RowBox[{"Cos", "[", 
          RowBox[{"t", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["I1", "2"], "-", 
             RowBox[{"2", "I2"}]}]]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["I1", "2"], "-", 
             RowBox[{"2", "I2"}]}], ")"}], "-", 
           RowBox[{"I1", " ", 
            RowBox[{"x", "[", "t", "]"}]}]}], ")"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"t", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["I1", "2"], "-", 
             RowBox[{"2", "I2"}]}]]}], "]"}]}]}]], ",", "t"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], 
         RowBox[{"z", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], 
         RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], "\[Rule]", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"x", "[", "t", "]"}], "2"], "-", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], 
         RowBox[{"z", "[", "t", "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "'"}], "[", "t", "]"}], "->", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], 
         RowBox[{"y", "[", "t", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"x", "[", "t", "]"}], "2"]}]}]}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"I1", "\[Rule]", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "+", 
       RowBox[{"y", "[", "t", "]"}], "+", 
       RowBox[{"z", "[", "t", "]"}]}]}], ",", 
     RowBox[{"I2", "\[Rule]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"x", "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"y", "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"z", "[", "t", "]"}], "2"]}]}]}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.5706500300625*^9, 3.57065015440625*^9}, {
   3.570650184984375*^9, 3.570650256828125*^9}, {3.57065028896875*^9, 
   3.57065036375*^9}, 3.57065048875*^9, {3.570650525328125*^9, 
   3.57065052678125*^9}, {3.57065058171875*^9, 3.570650648140625*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.570650366765625*^9, 3.57065050046875*^9, 
  3.570650535171875*^9, 3.570650649515625*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Invariants of the 2D-Kepler problem (fixed center)", "Subtitle",
 CellChangeTimes->{{3.5706495818125*^9, 3.57064959778125*^9}, {
  3.5706921624375*^9, 3.57069219315625*^9}, {3.57069222365625*^9, 
  3.570692239625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"q", "[", "t", "]"}], ",", "t"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"r", "'"}], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"p", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"q", "[", "t", "]"}], "/", 
      SuperscriptBox[
       RowBox[{"r", "[", "t", "]"}], "2"]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "'"}], "[", "t", "]"}], "->", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"q", "[", "t", "]"}], "2"], "/", 
       SuperscriptBox[
        RowBox[{"r", "[", "t", "]"}], "3"]}], "-", 
      RowBox[{"\[Mu]", "/", 
       SuperscriptBox[
        RowBox[{"r", "[", "t", "]"}], "2"]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}], "\[Rule]", "0"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.570692248890625*^9, 3.570692361875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.570692363203125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "t", "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "[", "t", "]"}], 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"q", "[", "t", "]"}], 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "/", 
           RowBox[{"r", "[", "t", "]"}]}]}]}], ")"}]}], "-", 
      RowBox[{"\[Mu]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", "t"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"r", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"p", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"q", "[", "t", "]"}], "/", 
       SuperscriptBox[
        RowBox[{"r", "[", "t", "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "'"}], "[", "t", "]"}], "->", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "t", "]"}], "2"], "/", 
        SuperscriptBox[
         RowBox[{"r", "[", "t", "]"}], "3"]}], "-", 
       RowBox[{"\[Mu]", "/", 
        SuperscriptBox[
         RowBox[{"r", "[", "t", "]"}], "2"]}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "'"}], "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.570692397171875*^9, 3.5706924993125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.570692476421875*^9, 3.570692499609375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "t", "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"p", "[", "t", "]"}]}], 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"q", "[", "t", "]"}], 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "/", 
           RowBox[{"r", "[", "t", "]"}]}]}]}], ")"}]}], "-", 
      RowBox[{"\[Mu]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", "t"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"r", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"p", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"q", "[", "t", "]"}], "/", 
       SuperscriptBox[
        RowBox[{"r", "[", "t", "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "'"}], "[", "t", "]"}], "->", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "t", "]"}], "2"], "/", 
        SuperscriptBox[
         RowBox[{"r", "[", "t", "]"}], "3"]}], "-", 
       RowBox[{"\[Mu]", "/", 
        SuperscriptBox[
         RowBox[{"r", "[", "t", "]"}], "2"]}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "'"}], "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.570692523296875*^9, 3.570692534921875*^9}, {
  3.570692582890625*^9, 3.5706925836875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.57069253834375*^9, 3.570692585796875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"I2", "-", "\[Mu]"}], ")"}], 
           RowBox[{"Tan", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], "/", "2"}], "]"}]}], "-", 
          "I3"}], ")"}], "+", 
        RowBox[{"I1", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "En"}]], 
         RowBox[{"Tan", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"I1", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "En"}]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"I3", " ", "\[Mu]"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"I2", "^", "2"}], "+", 
                  RowBox[{"I3", "^", "2"}]}], ")"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
            RowBox[{"2", "\[Mu]", " ", "I2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{"I2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
               RowBox[{"I3", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]], 
           "-", 
           FractionBox[
            RowBox[{"En", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "En"}]], "t"}], "\[Mu]"]}], "]"}]}]}], 
       RowBox[{
        RowBox[{"I1", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "2"}], "En"}]]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"I2", "-", "\[Mu]"}], ")"}], 
            RowBox[{"Tan", "[", 
             RowBox[{
              RowBox[{"\[Theta]", "[", "t", "]"}], "/", "2"}], "]"}]}], "-", 
           "I3"}], ")"}], 
         RowBox[{"Tan", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"I1", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "En"}]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"I3", " ", "\[Mu]"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"I2", "^", "2"}], "+", 
                  RowBox[{"I3", "^", "2"}]}], ")"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
            RowBox[{"2", "\[Mu]", " ", "I2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{"I2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
               RowBox[{"I3", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]], 
           "-", 
           FractionBox[
            RowBox[{"En", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "2"}], "En"}]], "t"}], "\[Mu]"]}], "]"}]}]}]], 
      ",", "t"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], "/", 
        SuperscriptBox[
         RowBox[{"r", "[", "t", "]"}], "2"]}]}], ",", 
      RowBox[{"En", "->", 
       FractionBox[
        RowBox[{
         RowBox[{"I2", "^", "2"}], "+", 
         RowBox[{"I3", "^", "2"}], "-", 
         RowBox[{"\[Mu]", "^", "2"}]}], 
        RowBox[{"2", 
         RowBox[{"I1", "^", "2"}]}]]}]}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"I1", "\[Rule]", 
      RowBox[{"q", "[", "t", "]"}]}], ",", 
     RowBox[{"I2", "->", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"p", "[", "t", "]"}], 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"q", "[", "t", "]"}], 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "/", 
            RowBox[{"r", "[", "t", "]"}]}]}]}], ")"}]}], "-", 
       RowBox[{"\[Mu]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ",", 
     RowBox[{"I3", "->", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"p", "[", "t", "]"}]}], 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"q", "[", "t", "]"}], 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "/", 
            RowBox[{"r", "[", "t", "]"}]}]}]}], ")"}]}], "-", 
       RowBox[{"\[Mu]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}]}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.57069265378125*^9, 3.57069304259375*^9}, {
  3.5706930735625*^9, 3.5706931685625*^9}, {3.570693221328125*^9, 
  3.570693269359375*^9}},
 FontSize->14],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.57069328846875*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Third autonomous invariant of the 2D-harmonic oscillator", "Subtitle",
 CellChangeTimes->{{3.5706495818125*^9, 3.57064959778125*^9}, 
   3.5707010931875*^9, {3.57072195834375*^9, 3.57072196871875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]1", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"\[Omega]2", " ", 
         RowBox[{
          RowBox[{"x2", "[", "t", "]"}], "/", 
          RowBox[{"v2", "[", "t", "]"}]}]}], "]"}]}], "-", 
      RowBox[{"\[Omega]2", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"\[Omega]1", " ", 
         RowBox[{
          RowBox[{"x1", "[", "t", "]"}], "/", 
          RowBox[{"v1", "[", "t", "]"}]}]}], "]"}]}]}], ",", "t"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x1", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"v1", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v1", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Omega]1", "2"]}], 
       RowBox[{"x1", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x2", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"v2", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v2", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Omega]2", "2"]}], 
       RowBox[{"x2", "[", "t", "]"}]}]}]}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.5707217799375*^9, 3.5707219503125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.570721926984375*^9, 3.57072195065625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", "3"}], ";", 
  RowBox[{"n", "=", "2"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Tan", "[", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"\[Omega]2", " ", 
         RowBox[{
          RowBox[{"x2", "[", "t", "]"}], "/", 
          RowBox[{"v2", "[", "t", "]"}]}]}], "]"}]}], "-", 
      RowBox[{"n", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"\[Omega]1", " ", 
         RowBox[{
          RowBox[{"x1", "[", "t", "]"}], "/", 
          RowBox[{"v1", "[", "t", "]"}]}]}], "]"}]}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]1", "\[Rule]", 
        RowBox[{"m", " ", "\[Omega]"}]}], ",", 
       RowBox[{"\[Omega]2", "\[Rule]", 
        RowBox[{"n", " ", "\[Omega]"}]}]}], "}"}], "TrigExpand"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.570722018890625*^9, 3.57072213159375*^9}, {
  3.570722211765625*^9, 3.570722253015625*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "6"}], " ", "\[Omega]", " ", 
    RowBox[{"v1", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"v2", "[", "t", "]"}], "3"], " ", 
    RowBox[{"x1", "[", "t", "]"}]}], "+", 
   RowBox[{"6", " ", "\[Omega]", " ", 
    SuperscriptBox[
     RowBox[{"v2", "[", "t", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"v1", "[", "t", "]"}], "2"], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
    RowBox[{"x2", "[", "t", "]"}]}], "+", 
   RowBox[{"72", " ", 
    SuperscriptBox["\[Omega]", "3"], " ", 
    RowBox[{"v1", "[", "t", "]"}], " ", 
    RowBox[{"v2", "[", "t", "]"}], " ", 
    RowBox[{"x1", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"x2", "[", "t", "]"}], "2"]}], "+", 
   RowBox[{"8", " ", 
    SuperscriptBox["\[Omega]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"v1", "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"x2", "[", "t", "]"}], "3"]}]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"v2", "[", "t", "]"}], "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"v1", "[", "t", "]"}], "2"], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
   RowBox[{"36", " ", 
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"v1", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"v2", "[", "t", "]"}], "2"], " ", 
    RowBox[{"x1", "[", "t", "]"}], " ", 
    RowBox[{"x2", "[", "t", "]"}]}], "-", 
   RowBox[{"12", " ", 
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"v2", "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"v1", "[", "t", "]"}], "2"], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"x2", "[", "t", "]"}], "2"]}], "-", 
   RowBox[{"48", " ", 
    SuperscriptBox["\[Omega]", "4"], " ", 
    RowBox[{"v1", "[", "t", "]"}], " ", 
    RowBox[{"x1", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"x2", "[", "t", "]"}], "3"]}]}]]], "Output",
 CellChangeTimes->{{3.570722227796875*^9, 3.57072224834375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Singlevaluedness of the former in the commensurable case, m=3, n=2 :\
\>", "Subsubtitle",
 CellChangeTimes->{
  3.570691757875*^9, {3.570691975515625*^9, 3.57069197971875*^9}, {
   3.57072231325*^9, 3.570722380171875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", "3"}], ";", 
  RowBox[{"n", "=", "2"}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Tan", "[", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox[
         RowBox[{"3", " ", "\[Omega]", " ", 
          RowBox[{"x1", "[", "t", "]"}]}], 
         RowBox[{"v1", "[", "t", "]"}]], "]"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox[
         RowBox[{"2", " ", "\[Omega]", " ", 
          RowBox[{"x2", "[", "t", "]"}]}], 
         RowBox[{"v2", "[", "t", "]"}]], "]"}]}]}], "]"}], "//", 
    "TrigExpand"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.570695604234375*^9, 3.57069582921875*^9}, {
  3.570722407796875*^9, 3.570722423640625*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "\[Omega]", " ", 
    RowBox[{"v1", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"v2", "[", "t", "]"}], "3"], " ", 
    RowBox[{"x1", "[", "t", "]"}]}], "+", 
   RowBox[{"6", " ", "\[Omega]", " ", 
    SuperscriptBox[
     RowBox[{"v2", "[", "t", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"v1", "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
    RowBox[{"x2", "[", "t", "]"}]}], "-", 
   RowBox[{"72", " ", 
    SuperscriptBox["\[Omega]", "3"], " ", 
    RowBox[{"v1", "[", "t", "]"}], " ", 
    RowBox[{"v2", "[", "t", "]"}], " ", 
    RowBox[{"x1", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"x2", "[", "t", "]"}], "2"]}], "+", 
   RowBox[{"8", " ", 
    SuperscriptBox["\[Omega]", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"v1", "[", "t", "]"}], "2"], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"x2", "[", "t", "]"}], "3"]}]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"v2", "[", "t", "]"}], "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"v1", "[", "t", "]"}], "2"], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
   RowBox[{"36", " ", 
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"v1", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"v2", "[", "t", "]"}], "2"], " ", 
    RowBox[{"x1", "[", "t", "]"}], " ", 
    RowBox[{"x2", "[", "t", "]"}]}], "-", 
   RowBox[{"12", " ", 
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"v2", "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"v1", "[", "t", "]"}], "2"], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"x2", "[", "t", "]"}], "2"]}], "-", 
   RowBox[{"48", " ", 
    SuperscriptBox["\[Omega]", "4"], " ", 
    RowBox[{"v1", "[", "t", "]"}], " ", 
    RowBox[{"x1", "[", "t", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"x2", "[", "t", "]"}], "3"]}]}]]], "Output",
 CellChangeTimes->{{3.570695774265625*^9, 3.57069583*^9}, {
  3.570722409140625*^9, 3.57072242496875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"6", " ", "\[Omega]", " ", 
        RowBox[{"v1", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "t", "]"}], "3"], " ", 
        RowBox[{"x1", "[", "t", "]"}]}], "+", 
       RowBox[{"6", " ", "\[Omega]", " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "t", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"v1", "[", "t", "]"}], "2"]}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
        RowBox[{"x2", "[", "t", "]"}]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["\[Omega]", "3"], " ", 
        RowBox[{"v1", "[", "t", "]"}], " ", 
        RowBox[{"v2", "[", "t", "]"}], " ", 
        RowBox[{"x1", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"x2", "[", "t", "]"}], "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Omega]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"v1", "[", "t", "]"}], "2"], "-", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"x2", "[", "t", "]"}], "3"]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"v2", "[", "t", "]"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"v1", "[", "t", "]"}], "2"], "-", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
       RowBox[{"36", " ", 
        SuperscriptBox["\[Omega]", "2"], " ", 
        RowBox[{"v1", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"v2", "[", "t", "]"}], "2"], " ", 
        RowBox[{"x1", "[", "t", "]"}], " ", 
        RowBox[{"x2", "[", "t", "]"}]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["\[Omega]", "2"], " ", 
        RowBox[{"v2", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"v1", "[", "t", "]"}], "2"], "-", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"x1", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"x2", "[", "t", "]"}], "2"]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Omega]", "4"], " ", 
        RowBox[{"v1", "[", "t", "]"}], " ", 
        RowBox[{"x1", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"x2", "[", "t", "]"}], "3"]}]}]], ",", "t"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x1", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"v1", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v1", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["m", "2"]}], 
       SuperscriptBox["\[Omega]", "2"], 
       RowBox[{"x1", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x2", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"v2", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v2", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["n", "2"]}], 
       SuperscriptBox["\[Omega]", "2"], 
       RowBox[{"x2", "[", "t", "]"}]}]}]}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.5707224614375*^9, {3.570722518640625*^9, 3.570722543515625*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.570722469828125*^9, 3.570722546734375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.570693326328125*^9, 3.57069332659375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"x", "[", "t", "]"}]}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.5664176162120667`*^9, 3.5664176350870667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "t"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5664176368683167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"6", 
     SuperscriptBox[
      RowBox[{"x", "[", "t", "]"}], "2"]}]}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.5664176461808167`*^9, 3.5664176467433167`*^9}, 
   3.5664179008370667`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"WeierstrassP", "[", 
     RowBox[{
      RowBox[{"t", "+", 
       RowBox[{"C", "[", "1", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"C", "[", "2", "]"}]}], "}"}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5664176474933167`*^9, 3.566417901758941*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"t", "+", 
     RowBox[{"6", 
      SuperscriptBox[
       RowBox[{"x", "[", "t", "]"}], "2"]}]}]}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.5664178510558167`*^9, 3.566417851102691*^9}}],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"t", "+", 
     RowBox[{"6", " ", 
      SuperscriptBox[
       RowBox[{"x", "[", "t", "]"}], "2"]}]}]}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Output",
 CellChangeTimes->{3.5664178518058167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
    SuperscriptBox[
     RowBox[{"x", "[", "t", "]"}], "3"]}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{3.5664176722433167`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(Solve\\)\
\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\
\>"}]], "Message", "MSG",
 CellChangeTimes->{3.566417674196441*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "4"}]]}], " ", 
      SqrtBox[
       FractionBox["\[ImaginaryI]", 
        SqrtBox[
         RowBox[{"C", "[", "1", "]"}]]]], " ", 
      SqrtBox[
       RowBox[{"C", "[", "1", "]"}]], " ", 
      RowBox[{"JacobiSN", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"3", "/", "4"}]], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{
             SqrtBox["2"], " ", 
             SuperscriptBox["t", "2"], " ", 
             SqrtBox[
              RowBox[{"C", "[", "1", "]"}]]}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "t", " ", 
             SqrtBox[
              RowBox[{"C", "[", "1", "]"}]], " ", 
             RowBox[{"C", "[", "2", "]"}]}], "+", 
            RowBox[{
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"C", "[", "1", "]"}]], " ", 
             SuperscriptBox[
              RowBox[{"C", "[", "2", "]"}], "2"]}]}]]}], 
         SqrtBox["2"]], ",", 
        RowBox[{"-", "1"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"1", "/", "4"}]], " ", 
      SqrtBox[
       FractionBox["\[ImaginaryI]", 
        SqrtBox[
         RowBox[{"C", "[", "1", "]"}]]]], " ", 
      SqrtBox[
       RowBox[{"C", "[", "1", "]"}]], " ", 
      RowBox[{"JacobiSN", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"3", "/", "4"}]], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{
             SqrtBox["2"], " ", 
             SuperscriptBox["t", "2"], " ", 
             SqrtBox[
              RowBox[{"C", "[", "1", "]"}]]}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", "t", " ", 
             SqrtBox[
              RowBox[{"C", "[", "1", "]"}]], " ", 
             RowBox[{"C", "[", "2", "]"}]}], "+", 
            RowBox[{
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"C", "[", "1", "]"}]], " ", 
             SuperscriptBox[
              RowBox[{"C", "[", "2", "]"}], "2"]}]}]]}], 
         SqrtBox["2"]], ",", 
        RowBox[{"-", "1"}]}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.566417674196441*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
    SuperscriptBox[
     RowBox[{"x", "[", "t", "]"}], "4"]}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{
  3.5664176897433167`*^9, {3.5664179627745667`*^9, 3.566417972508941*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         FractionBox["1", "5"], ",", 
         FractionBox["1", "2"], ",", 
         FractionBox["6", "5"], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"x", "[", "t", "]"}], "5"]}], 
           RowBox[{"5", " ", 
            RowBox[{"C", "[", "1", "]"}]}]]}]}], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"x", "[", "t", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "t", "]"}], "5"]}], 
         RowBox[{"5", " ", 
          RowBox[{"C", "[", "1", "]"}]}]]}], ")"}]}], 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"x", "[", "t", "]"}], "5"]}], "5"]}]], "\[Equal]", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"t", "+", 
       RowBox[{"C", "[", "2", "]"}]}], ")"}], "2"]}], ",", 
   RowBox[{"x", "[", "t", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.566417700415191*^9, {3.5664179680245667`*^9, 3.5664179841183167`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "+", 
     SuperscriptBox[
      RowBox[{"x", "[", "t", "]"}], "4"]}]}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.566417734665191*^9, 3.566417744852691*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.5664178175558167`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1224, 871},
WindowMargins->{{15, Automatic}, {Automatic, 20}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 90, 1, 83, "Title"],
Cell[672, 25, 456, 11, 50, "Subtitle"],
Cell[CellGroupData[{
Cell[1153, 40, 821, 19, 31, "Input"],
Cell[1977, 61, 333, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2347, 76, 129, 2, 31, "Input"],
Cell[2479, 80, 649, 19, 57, "Output"]
}, Open  ]],
Cell[3143, 102, 302, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[3470, 115, 348, 10, 31, "Input"],
Cell[3821, 127, 763, 25, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4621, 157, 531, 16, 31, "Input"],
Cell[5155, 175, 865, 25, 33, "Output"]
}, Open  ]],
Cell[6035, 203, 523, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[6583, 221, 151, 3, 31, "Input"],
Cell[6737, 226, 1327, 36, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8101, 267, 514, 13, 31, "Input"],
Cell[8618, 282, 462, 13, 30, "Output"]
}, Open  ]],
Cell[9095, 298, 674, 20, 31, "Input"],
Cell[CellGroupData[{
Cell[9794, 322, 56, 1, 31, "Input"],
Cell[9853, 325, 550, 18, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10440, 348, 492, 13, 48, "Input"],
Cell[10935, 363, 102034, 1708, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113006, 2076, 209, 6, 31, "Input"],
Cell[113218, 2084, 1257, 40, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114512, 2129, 637, 17, 31, "Input"],
Cell[115152, 2148, 396, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115585, 2164, 127, 2, 31, "Input"],
Cell[115715, 2168, 709, 20, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116461, 2193, 183, 4, 31, "Input"],
Cell[116647, 2199, 2425, 69, 72, "Output"]
}, Open  ]],
Cell[119087, 2271, 536, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[119648, 2290, 151, 3, 31, "Input"],
Cell[119802, 2295, 3357, 91, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123196, 2391, 514, 13, 31, "Input"],
Cell[123713, 2406, 319, 8, 30, "Output"]
}, Open  ]],
Cell[124047, 2417, 617, 19, 31, "Input"],
Cell[CellGroupData[{
Cell[124689, 2440, 209, 6, 31, "Input"],
Cell[124901, 2448, 5138, 151, 77, "Output"]
}, Open  ]],
Cell[130054, 2602, 87, 1, 52, "Input"],
Cell[CellGroupData[{
Cell[130166, 2607, 123, 1, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[130314, 2612, 726, 24, 33, "Input"],
Cell[131043, 2638, 92, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131172, 2644, 1073, 34, 49, "Input"],
Cell[132248, 2680, 92, 1, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132389, 2687, 121, 1, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[132535, 2692, 2324, 68, 74, "Input"],
Cell[134862, 2762, 1251, 42, 30, "Output"],
Cell[136116, 2806, 19158, 322, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155311, 3133, 152, 2, 28, "Subsubtitle"],
Cell[CellGroupData[{
Cell[155488, 3139, 3771, 118, 117, "Input"],
Cell[159262, 3259, 138, 2, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159461, 3268, 224, 3, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[159710, 3275, 1027, 34, 33, "Input"],
Cell[160740, 3311, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160847, 3317, 1659, 52, 54, "Input"],
Cell[162509, 3371, 94, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162640, 3377, 1735, 54, 54, "Input"],
Cell[164378, 3433, 91, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164506, 3439, 5540, 165, 123, "Input"],
Cell[170049, 3606, 69, 1, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170167, 3613, 207, 2, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[170399, 3619, 1379, 43, 54, "Input"],
Cell[171781, 3664, 93, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171911, 3670, 991, 29, 31, "Input"],
Cell[172905, 3701, 2674, 79, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175616, 3785, 232, 5, 28, "Subsubtitle"],
Cell[CellGroupData[{
Cell[175873, 3794, 775, 22, 49, "Input"],
Cell[176651, 3818, 2696, 79, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179384, 3902, 3887, 110, 80, "Input"],
Cell[183274, 4014, 92, 1, 30, "Output"]
}, Open  ]],
Cell[183381, 4018, 171, 3, 92, "Input"],
Cell[CellGroupData[{
Cell[183577, 4025, 304, 8, 31, "Input"],
Cell[183884, 4035, 425, 13, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184346, 4053, 381, 11, 33, "Input"],
Cell[184730, 4066, 418, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185185, 4084, 430, 12, 33, "Input"],
Cell[185618, 4098, 412, 12, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186067, 4115, 305, 9, 33, "Input"],
Cell[186375, 4126, 505, 10, 21, "Message"],
Cell[186883, 4138, 2645, 84, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189565, 4227, 356, 10, 33, "Input"],
Cell[189924, 4239, 1331, 41, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191292, 4285, 385, 11, 33, "Input"],
Cell[191680, 4298, 79, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
